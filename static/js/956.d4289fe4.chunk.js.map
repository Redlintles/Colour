{"version":3,"file":"static/js/956.d4289fe4.chunk.js","mappings":"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","sources":["classes/ColorParser.ts","components/Frame/ContentExample/ContentExample.tsx","components/Frame/ContentBlock/ContentBlock.tsx","components/Frame/TextContent/TextContent.tsx","context/ScreenDimensionContext.tsx","hooks/useLocalStorage.ts","hooks/useUtils.ts","context/ActiveTabContext.tsx","hooks/useLoadImages.ts","components/GradgenPage/LinearCanvas/LinearCanvas.tsx","components/GradgenPage/RadialCanvas/RadialCanvas.tsx","components/GradgenPage/ConicCanvas/ConicCanvas.tsx","components/GradgenPage/GradgenTab/GradgenTab.tsx","components/GradgenPage/ColorList/ColorList.tsx","components/GradgenPage/ChangeGradType/ChangeGradType.tsx","components/GradgenPage/AddTab/AddTab.tsx","components/GradgenPage/ColorTransparent/ColorTransparent.tsx","components/GradgenPage/ChangeColorStops/ChangeColorStops.tsx","components/GradgenPage/LinearCanvasOptions/LinearCanvasOptions.tsx","components/GradgenPage/RadialCanvasOptions/RadialCanvasOptions.tsx","components/GradgenPage/ConicCanvasOptions/ConicCanvasOptions.tsx","components/GradgenPage/GradgenClipboard/GradgenClipboard.tsx","components/GradgenPage/OptionContainer/OptionContainer.tsx","components/GradgenPage/GradgenBuilder/GradgenBuilder.tsx","pages/Gradgen/Gradgen.tsx"],"sourcesContent":["interface Color {\r\n  id: string;\r\n  toString(): string;\r\n  clamp(num: number, min: number, max: number): number;\r\n}\r\n\r\ninterface RGBColor extends Color {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n  alpha: number;\r\n}\r\n\r\ninterface HEXColor extends RGBColor {}\r\n\r\ninterface HSLColor extends Color {\r\n  hue: number;\r\n  saturation: number;\r\n  lightness: number;\r\n  alpha: number;\r\n}\r\ninterface CMYKColor extends Color {\r\n  cyan: number;\r\n  magenta: number;\r\n  yellow: number;\r\n  black: number;\r\n  alpha: number;\r\n}\r\n\r\nclass Color implements Color {\r\n  clamp(num: number, min: number, max: number): number {\r\n    return Math.min(Math.max(num, min), max);\r\n  }\r\n  toString(): string {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nclass RGBColor extends Color implements RGBColor {\r\n  constructor(red: number, green: number, blue: number, alpha: number = 1) {\r\n    super();\r\n    this.red = this.clamp(red, 0, 255);\r\n    this.green = this.clamp(green, 0, 255);\r\n    this.blue = this.clamp(blue, 0, 255);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n  toString(): string {\r\n    const { red, green, blue, alpha } = this;\r\n    if (alpha !== 1) {\r\n      return `rgba(${red},${green},${blue},${alpha})`;\r\n    } else {\r\n      return `rgb(${red},${green},${blue})`;\r\n    }\r\n  }\r\n  get components(): number[] {\r\n    const { red, green, blue, alpha } = this;\r\n    return [red, green, blue, alpha];\r\n  }\r\n}\r\n\r\nclass HEXColor extends RGBColor implements HEXColor {\r\n  constructor(red: number, green: number, blue: number, alpha: number = 1) {\r\n    super(red, green, blue, alpha);\r\n  }\r\n  toString(): string {\r\n    const { red, green, blue, alpha } = this;\r\n\r\n    let hex = \"#\";\r\n    for (let i of [red, green, blue]) {\r\n      let parsed = i.toString(16);\r\n      if (parsed.length === 1) {\r\n        parsed = parsed.padStart(2, \"0\");\r\n      }\r\n      hex += parsed;\r\n    }\r\n\r\n    if (alpha && alpha !== 1) {\r\n      let parsed = parseInt((this.alpha * 255).toString()).toString(16);\r\n      if (parsed.length === 1) {\r\n        parsed = parsed.padStart(2, \"0\");\r\n      }\r\n      hex += parsed;\r\n    }\r\n\r\n    return hex;\r\n  }\r\n}\r\n\r\nclass HSLColor extends Color implements HSLColor {\r\n  constructor(\r\n    hue: number,\r\n    saturation: number,\r\n    lightness: number,\r\n    alpha: number = 1\r\n  ) {\r\n    super();\r\n    this.hue = this.clamp(hue, 0, 360);\r\n    this.saturation = this.clamp(saturation, 0, 100);\r\n    this.lightness = this.clamp(lightness, 0, 100);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n\r\n  toString(): string {\r\n    const { hue, saturation, lightness, alpha } = this;\r\n\r\n    if (alpha !== 1) {\r\n      return `hsla(${hue}deg,${saturation}%,${lightness}%,${parseInt(\r\n        (alpha * 100).toString()\r\n      )}%)`;\r\n    } else {\r\n      return `hsl(${hue}deg,${saturation}%,${lightness}%)`;\r\n    }\r\n  }\r\n\r\n  get components(): number[] {\r\n    const { hue, saturation, lightness, alpha } = this;\r\n    return [hue, saturation, lightness, alpha];\r\n  }\r\n}\r\n\r\nclass CMYKColor extends Color implements CMYKColor {\r\n  constructor(\r\n    cyan: number,\r\n    magenta: number,\r\n    yellow: number,\r\n    black: number,\r\n    alpha: number = 1\r\n  ) {\r\n    super();\r\n    this.cyan = this.clamp(cyan, 0, 100);\r\n    this.magenta = this.clamp(magenta, 0, 100);\r\n    this.yellow = this.clamp(yellow, 0, 100);\r\n    this.black = this.clamp(black, 0, 100);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n  toString(): string {\r\n    const { cyan, magenta, yellow, black } = this;\r\n    return `cmyk(${cyan}%,${magenta}%,${yellow}%,${black}%)`;\r\n  }\r\n  get components(): number[] {\r\n    const { cyan, magenta, yellow, black, alpha } = this;\r\n    return [cyan, magenta, yellow, black, alpha];\r\n  }\r\n}\r\n\r\ninterface ColorParser {\r\n  color: HSLColor | RGBColor | HEXColor | CMYKColor;\r\n}\r\n\r\nexport interface ColorParserSchema extends ColorParser {}\r\n\r\nclass ColorParser implements ColorParser {\r\n  private invalidColorMessage: string =\r\n    \"InvalidColorError: Color must be expressed only in the following color formats: cmyk,rgba?,hex or hsla?\";\r\n\r\n  private validateHEX(color: string): boolean {\r\n    const resumedHEX = /^#[0-9a-fA-F]{3,4}$/;\r\n    const fullHEX = /^#[0-9a-fA-F]{6,8}$/;\r\n\r\n    if ([4, 5, 7, 9].includes(color.length)) {\r\n      return resumedHEX.test(color) || fullHEX.test(color);\r\n    }\r\n    return false;\r\n  }\r\n  private validateHSL(color: string): boolean {\r\n    // hsl(30deg,100%,50%);\r\n    // hsla(20deg,100%,50%,45%);\r\n\r\n    const onlyHSL = /^hsl\\((?:\\d{1,3}deg)(?:,\\d{1,3}%){2}\\)$/;\r\n    const onlyHSLA = /^hsla\\((?:\\d{1,3}deg)(?:,\\d{1,3}%){3}\\)$/;\r\n\r\n    return onlyHSL.test(color) || onlyHSLA.test(color);\r\n  }\r\n  private validateRGB(color: string): boolean {\r\n    // rgb(255,255,255);\r\n    // rgba(255,255,255,0.5);\r\n\r\n    const onlyRGB = /^rgb\\((?:\\d{1,3},?){3}\\)$/;\r\n    const onlyRGBA = /^rgba\\((?:\\d{1,3},){3}(?:[0-1]\\.\\d+)\\)$/;\r\n\r\n    return onlyRGB.test(color) || onlyRGBA.test(color);\r\n  }\r\n  private validateCMYK(color: string): boolean {\r\n    const regex = /^cmyk\\((?:\\d{1,3}%,?){4}\\)$/;\r\n\r\n    return regex.test(color);\r\n  }\r\n  static splitHSL(color: string): HSLColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [hue, saturation, lightness, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new HSLColor(hue, saturation, lightness, alpha);\r\n    } else {\r\n      return new HSLColor(hue, saturation, lightness);\r\n    }\r\n  }\r\n  static splitHEX(color: string): HEXColor {\r\n    color = color.slice(1);\r\n    const colorComponents = [];\r\n\r\n    console.log(color);\r\n\r\n    if ([3, 4].includes(color.length)) {\r\n      let extended = \"\";\r\n      for (let i of color) {\r\n        extended += i.repeat(2);\r\n      }\r\n      color = extended;\r\n    }\r\n\r\n    for (let i = 0; i < color.length; i += 2) {\r\n      const component = color.slice(i, i + 2);\r\n      colorComponents.push(parseInt(component, 16));\r\n    }\r\n\r\n    let [red, green, blue, alpha] = colorComponents;\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      alpha /= 255;\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else {\r\n      return new HEXColor(red, green, blue);\r\n    }\r\n  }\r\n  static splitRGB(color: string): RGBColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [red, green, blue, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new RGBColor(red, green, blue, alpha);\r\n    } else {\r\n      return new RGBColor(red, green, blue);\r\n    }\r\n  }\r\n  static splitCMYK(color: string): CMYKColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [cyan, magenta, yellow, black, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new CMYKColor(cyan, magenta, yellow, black);\r\n    } else {\r\n      return new CMYKColor(cyan, magenta, yellow, black, alpha);\r\n    }\r\n  }\r\n\r\n  private hueToRGB(p: number, q: number, t: number): number {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2) return q;\r\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n  }\r\n\r\n  private HSLtoRGB(\r\n    hue: number,\r\n    saturation: number,\r\n    lightness: number\r\n  ): RGBColor {\r\n    let red: number = 0;\r\n    let green: number = 0;\r\n    let blue: number = 0;\r\n\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n\r\n    if (saturation === 0) {\r\n      red = green = blue = lightness;\r\n    } else {\r\n      let q =\r\n        lightness < 0.5\r\n          ? lightness * (1 + saturation)\r\n          : lightness + saturation - lightness * saturation;\r\n      let p = 2 * lightness - q;\r\n      red = this.hueToRGB(p, q, hue + 1 / 3);\r\n      green = this.hueToRGB(p, q, hue);\r\n      blue = this.hueToRGB(p, q, hue - 1 / 3);\r\n    }\r\n\r\n    red = Math.round(red * 255);\r\n    green = Math.round(green * 255);\r\n    blue = Math.round(blue * 255);\r\n\r\n    return new RGBColor(red, green, blue, this.color.alpha);\r\n  }\r\n  private RGBtoHSL(red: number, green: number, blue: number): HSLColor {\r\n    red /= 255;\r\n    green /= 255;\r\n    blue /= 255;\r\n\r\n    let max = Math.max(red, green, blue);\r\n    let min = Math.min(red, green, blue);\r\n\r\n    let h: number = (max + min) / 2;\r\n    let s: number = (max + min) / 2;\r\n    let l: number = (max + min) / 2;\r\n\r\n    if (max === min) {\r\n      h = s = 0; // achromatic\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      switch (max) {\r\n        case red:\r\n          h = (green - blue) / d + (green < blue ? 6 : 0);\r\n          break;\r\n        case green:\r\n          h = (blue - red) / d + 2;\r\n          break;\r\n        case blue:\r\n          h = (red - green) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    h = parseInt((h * 360).toString());\r\n    s = Math.round(s * 100);\r\n    l = Math.round(l * 100);\r\n\r\n    return new HSLColor(h, s, l, this.color.alpha);\r\n  }\r\n  private RGBtoCMYK(red: number, green: number, blue: number): CMYKColor {\r\n    let black = 1 - Math.max(red, green, blue) / 255;\r\n    let cyan = (1 - red / 255 - black) / (1 - black);\r\n    let magenta = (1 - green / 255 - black) / (1 - black);\r\n    let yellow = (1 - blue / 255 - black) / (1 - black);\r\n\r\n    cyan = isNaN(cyan) ? 0 : cyan;\r\n    magenta = isNaN(magenta) ? 0 : magenta;\r\n    yellow = isNaN(yellow) ? 0 : yellow;\r\n    black = isNaN(black) ? 0 : black;\r\n\r\n    cyan = Math.round(cyan * 100);\r\n    magenta = Math.round(magenta * 100);\r\n    yellow = Math.round(yellow * 100);\r\n    black = Math.round(black * 100);\r\n\r\n    return new CMYKColor(cyan, magenta, yellow, black, this.color.alpha);\r\n  }\r\n\r\n  private CMYKtoRGB(\r\n    cyan: number,\r\n    magenta: number,\r\n    yellow: number,\r\n    black: number\r\n  ): RGBColor {\r\n    let red = 255 * (1 - cyan / 100) * (1 - black / 100);\r\n    let green = 255 * (1 - magenta / 100) * (1 - black / 100);\r\n    let blue = 255 * (1 - yellow / 100) * (1 - black / 100);\r\n\r\n    return new RGBColor(red, green, blue, this.color.alpha);\r\n  }\r\n\r\n  constructor(color: string | RGBColor | CMYKColor | HSLColor | HEXColor) {\r\n    if (typeof color === \"string\") {\r\n      if (this.validateHEX(color)) {\r\n        this.color = ColorParser.splitHEX(color);\r\n      } else if (this.validateCMYK(color)) {\r\n        this.color = ColorParser.splitCMYK(color);\r\n      } else if (this.validateRGB(color)) {\r\n        this.color = ColorParser.splitRGB(color);\r\n      } else if (this.validateHSL(color)) {\r\n        this.color = ColorParser.splitHSL(color);\r\n      }\r\n    } else {\r\n      this.color = color;\r\n    }\r\n  }\r\n\r\n  get hsl(): HSLColor {\r\n    if (this.color instanceof HSLColor) {\r\n      return this.color;\r\n    } else if (\r\n      this.color instanceof RGBColor ||\r\n      this.color instanceof HEXColor\r\n    ) {\r\n      const { red, green, blue } = this.color;\r\n      return this.RGBtoHSL(red, green, blue);\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const { red, green, blue } = this.CMYKtoRGB(cyan, magenta, yellow, black);\r\n      return this.RGBtoHSL(red, green, blue);\r\n    }\r\n    return new HSLColor(0, 100, 50);\r\n  }\r\n\r\n  get rgb(): RGBColor {\r\n    if (this.color instanceof RGBColor) {\r\n      return this.color;\r\n    } else if (this.color instanceof HEXColor) {\r\n      const { red, green, blue, alpha } = this.color;\r\n      return new RGBColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof HSLColor) {\r\n      const { hue, saturation, lightness } = this.color;\r\n      const result = this.HSLtoRGB(hue, saturation, lightness);\r\n      return result;\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const result = this.CMYKtoRGB(cyan, magenta, yellow, black);\r\n      return result;\r\n    }\r\n    return new RGBColor(255, 255, 255, 0.5);\r\n  }\r\n\r\n  get hex(): HEXColor {\r\n    if (this.color instanceof HEXColor) {\r\n      return this.color;\r\n    } else if (this.color instanceof RGBColor) {\r\n      let { red, green, blue, alpha } = this.color;\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof HSLColor) {\r\n      let { hue, saturation, lightness } = this.color;\r\n      let { red, green, blue, alpha } = this.HSLtoRGB(\r\n        hue,\r\n        saturation,\r\n        lightness\r\n      );\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const { red, green, blue, alpha } = this.CMYKtoRGB(\r\n        cyan,\r\n        magenta,\r\n        yellow,\r\n        black\r\n      );\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    }\r\n\r\n    return new HEXColor(255, 125, 255, 255);\r\n  }\r\n\r\n  get cmyk(): CMYKColor {\r\n    if (this.color instanceof CMYKColor) {\r\n      return this.color;\r\n    } else if (\r\n      this.color instanceof RGBColor ||\r\n      this.color instanceof HEXColor\r\n    ) {\r\n      const { red, green, blue } = this.color;\r\n      return this.RGBtoCMYK(red, green, blue);\r\n    } else if (this.color instanceof HSLColor) {\r\n      const { hue, saturation, lightness } = this.color;\r\n      const { red, green, blue } = this.HSLtoRGB(hue, saturation, lightness);\r\n      return this.RGBtoCMYK(red, green, blue);\r\n    }\r\n    return new CMYKColor(0, 0, 0, 100, 100);\r\n  }\r\n}\r\n\r\nexport default ColorParser;\r\n\r\nexport { RGBColor, HEXColor, HSLColor, CMYKColor };\r\n","import \"./ContentExample.scss\";\r\nimport ColorParser from \"classes/ColorParser\";\r\n\r\ntype Props = {\r\n  color: string;\r\n};\r\n\r\nfunction ContentExample({ color }: Props) {\r\n  return (\r\n    <div className=\"content__example\">\r\n      <div\r\n        className=\"example__preview\"\r\n        style={{\r\n          background: color.startsWith(\"cmyk\")\r\n            ? new ColorParser(color).rgb.toString()\r\n            : color,\r\n        }}\r\n      ></div>\r\n      <div className=\"example__text\">{color}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentExample;\r\n","import \"./ContentBlock.scss\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nimport ContentExample from \"components/Frame/ContentExample/ContentExample\";\r\nimport { Content } from \"data/PageText\";\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\ntype Props = {\r\n  data: Content;\r\n};\r\n\r\nfunction ContentBlock({ data }: Props) {\r\n  const contentRef = useRef<HTMLParagraphElement>(null);\r\n\r\n  const { title, main, prevs } = data;\r\n\r\n  useEffect(() => {\r\n    if (contentRef.current) {\r\n      const { current: element } = contentRef;\r\n\r\n      element.innerHTML = main;\r\n    }\r\n  }, [contentRef]);\r\n\r\n  return (\r\n    <div className=\"content__block\">\r\n      <ReactMarkdown>{`${title}\\n${main}`}</ReactMarkdown>\r\n      {prevs && prevs.map((item, i) => <ContentExample key={i} color={item} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentBlock;\r\n","import { PageTextContent } from \"data/PageText\";\r\nimport ContentBlock from \"components/Frame/ContentBlock/ContentBlock\";\r\n\r\nimport \"./TextContent.scss\";\r\n\r\ntype Props = {\r\n  data: PageTextContent;\r\n};\r\n\r\nfunction TextContent({ data }: Props) {\r\n  return (\r\n    <section className=\"text-content\">\r\n      <h3 className=\"content__section-title\">{data.contentTitle}</h3>\r\n\r\n      {data &&\r\n        data.items.map((item) => <ContentBlock data={item} key={item.main} />)}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TextContent;\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\ninterface ScreenDimensions {\r\n  width: number;\r\n  height: number;\r\n  readonly xsm: 0;\r\n  readonly sm: 576;\r\n  readonly md: 768;\r\n  readonly lg: 992;\r\n  readonly xlg: 1200;\r\n}\r\n\r\ninterface Context<T> {\r\n  data: T;\r\n  setData: React.Dispatch<React.SetStateAction<T>> | (() => {});\r\n}\r\n\r\nconst defaultData: ScreenDimensions = {\r\n  width: window.screen.availWidth,\r\n  height: window.screen.availHeight,\r\n  xsm: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xlg: 1200,\r\n};\r\n\r\nexport const ScreenDimensionContext = createContext<Context<ScreenDimensions>>({\r\n  data: defaultData,\r\n  setData: () => {},\r\n});\r\n\r\nfunction ScreenDimensionContextProvider({ children }: any) {\r\n  const [data, setData] = useState<ScreenDimensions>(defaultData);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setData({\r\n        ...data,\r\n        width: window.screen.availWidth,\r\n        height: window.screen.availHeight,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ScreenDimensionContext.Provider value={{ data, setData }}>\r\n      {children}\r\n    </ScreenDimensionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ScreenDimensionContextProvider;\r\n","import { useState, useEffect } from \"react\";\r\n\r\ntype State<T> = [T, React.Dispatch<React.SetStateAction<T>>];\r\n\r\nfunction useLocalStorage<T>(key: string, defaultValue: T): State<T> {\r\n  const [state, setState] = useState<T>(() => {\r\n    const parsed = localStorage.getItem(key);\r\n    if (parsed) {\r\n      return JSON.parse(parsed);\r\n    } else {\r\n      localStorage.setItem(key, JSON.stringify(defaultValue));\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const parsed = JSON.stringify(state);\r\n    localStorage.setItem(key, parsed);\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { useCallback } from \"react\";\r\n\r\nimport { Coord } from \"../Types/GlobalTypes\";\r\n\r\nexport function useUtils() {\r\n  /* eslint-enable */\r\n  const clamp = useCallback((num: number, min: number, max: number): number => {\r\n    return Math.min(Math.max(num, min), max);\r\n  }, []);\r\n\r\n  const all = useCallback((...comparisons: any[]): boolean => {\r\n    for (let i of comparisons) {\r\n      if (!Boolean(i)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }, []);\r\n\r\n  const sum = useCallback((...numbers: number[]): number => {\r\n    return numbers.reduce((acc, crr) => acc + crr, 0);\r\n  }, []);\r\n\r\n  const degToRad = useCallback((deg: number) => (Math.PI / 180) * deg, []);\r\n  const radToDeg = useCallback((rad: number) => (rad * 180) / Math.PI, []);\r\n  const cartesianDistance = useCallback((p1: Coord, p2: Coord) => {\r\n    const distance: number = (p2[0] - p1[0]) ** 2 + (p2[1] - p1[1]) ** 2;\r\n    return Math.sqrt(distance);\r\n  }, []);\r\n\r\n  return { clamp, all, sum, degToRad, cartesianDistance , radToDeg};\r\n}\r\n","import { createContext, useState } from \"react\";\r\nimport { Tab } from \"../Types/GradgenBuilderTypes\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\ninterface activeTabContextInt {\r\n  activeTab: Tab;\r\n  setActiveTab: Function;\r\n}\r\n\r\nexport const defaultValue: Tab = {\r\n  name: \"Novo\",\r\n  id: uuidV4(),\r\n  type: \"linear\",\r\n  colors: [],\r\n};\r\n\r\nexport const activeTabContext = createContext<activeTabContextInt>({\r\n  activeTab: defaultValue,\r\n  setActiveTab: () => {},\r\n});\r\n\r\nexport function ActiveTabContextProvider({ children }: any) {\r\n  const [activeTab, setActiveTab] = useState<Tab>(defaultValue);\r\n  return (\r\n    <activeTabContext.Provider value={{ activeTab, setActiveTab }}>\r\n      {children}\r\n    </activeTabContext.Provider>\r\n  );\r\n}\r\n","import { useEffect, useState, RefObject } from \"react\";\r\n\r\nexport function useLoadImages(canvasRef: RefObject<HTMLCanvasElement>) {\r\n  let [transparentPattern, setTransparentPattern] = useState<CanvasPattern>();\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      if (ctx) {\r\n        const img: HTMLImageElement = new Image();\r\n\r\n        img.src = \"/transparent.png\";\r\n        img.onload = () => {\r\n          if (ctx) {\r\n            const ptn = ctx.createPattern(img, \"repeat\");\r\n            if (ptn) {\r\n              setTransparentPattern(ptn);\r\n            }\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  return { transparentPattern };\r\n}\r\n","import { useEffect, useRef, useCallback, useContext } from \"react\";\r\nimport { rectArrType } from \"Types/CanvasTypes\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\nimport { useUtils } from \"hooks/useUtils\";\r\n\r\nimport \"./LinearCanvas.scss\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { useLoadImages } from \"../../../hooks/useLoadImages\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport { ScreenDimensionContext } from \"context/ScreenDimensionContext\";\r\n\r\nlet rectArr: rectArrType = [];\r\nlet color: string = \"#ffffff\";\r\n\r\nlet name: string = \"\";\r\n\r\nfunction LinearCanvas() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const previewRef = useRef<HTMLDivElement>(null);\r\n  const { activeTab: tab, setActiveTab: setTab } = useContext(activeTabContext);\r\n  const { direction, stops, gradient } = tab;\r\n  const { selectedColor } = tab ? tab : { selectedColor: \"#ffffff\" };\r\n\r\n  const { data: screenWidth } = useContext(ScreenDimensionContext);\r\n\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  const { transparentPattern } = useLoadImages(canvasRef);\r\n  const getStartingPoint = useCallback(() => {\r\n    return rectArr.reduce((acc: number, crr: any): number => {\r\n      if (\"width\" in crr) {\r\n        return acc + crr.width;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  }, []);\r\n\r\n  const { clamp } = useUtils();\r\n\r\n  const createGradient = useCallback(() => {\r\n    let percentList = [];\r\n    for (let i in rectArr) {\r\n      let slice = rectArr.slice(0, parseInt(i));\r\n      percentList.push(\r\n        slice.reduce((acc, crr) => {\r\n          return acc + crr.percent;\r\n        }, 0)\r\n      );\r\n    }\r\n\r\n    let grad = `linear-gradient(${direction || 90}deg, `;\r\n\r\n    for (let i in rectArr) {\r\n      if (stops) {\r\n        if (parseInt(i) !== rectArr.length - 1) {\r\n          grad += `${rectArr[i].color} ${percentList[i]}%, `;\r\n        } else {\r\n          grad += `${rectArr[i].color} 100%)`;\r\n        }\r\n      } else {\r\n        grad += `${rectArr[i].color} ${percentList[i]}% ${\r\n          percentList[parseInt(i) + 1] || 100\r\n        }%, `;\r\n      }\r\n    }\r\n\r\n    grad = grad.replace(/,\\s$/, \")\");\r\n\r\n    console.log(grad);\r\n\r\n    setTab((prev: Tab) => {\r\n      return {\r\n        ...prev,\r\n        gradient: grad,\r\n      };\r\n    });\r\n  }, [direction, stops, setTab]);\r\n\r\n  const drawLine = useCallback(\r\n    (e: MouseEvent) => {\r\n      let { offsetX: x } = e;\r\n      const canvas = e.target;\r\n\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const { width, height } = canvas;\r\n        x = clamp(x, 0, width);\r\n\r\n        if (ctx && x > getStartingPoint()) {\r\n          ctx.strokeStyle = \"#fff\";\r\n          ctx.lineWidth = 2;\r\n\r\n          if (color !== \"transparent\") {\r\n            ctx.fillStyle = color;\r\n          } else {\r\n            ctx.fillStyle = transparentPattern as CanvasPattern;\r\n          }\r\n          ctx.clearRect(0, 0, width, height);\r\n\r\n          ctx.beginPath();\r\n\r\n          // Draw Ghost Rect\r\n          if (color !== \"transparent\") {\r\n            ctx.globalAlpha = 0.5;\r\n          }\r\n          ctx.moveTo(getStartingPoint(), 0);\r\n          ctx.fillRect(0, 0, x, height);\r\n\r\n          // Draw Line\r\n          ctx.globalAlpha = 1;\r\n          ctx.moveTo(x, 0);\r\n          ctx.lineTo(x, height);\r\n\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n\r\n          if (rectArr.length > 0) {\r\n            drawRects(canvas);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /* eslint-disable */\r\n    [getStartingPoint, tab, selectedColor, transparentPattern]\r\n    /* eslint-enable */\r\n  );\r\n\r\n  const pushRect = useCallback(\r\n    (e: MouseEvent) => {\r\n      if (e.target instanceof HTMLCanvasElement) {\r\n        const { width } = e.target;\r\n        let { offsetX: x } = e;\r\n        x = clamp(x, 0, width);\r\n        const rectWidth = x - getStartingPoint();\r\n        if (rectWidth > 0) {\r\n          const obj = {\r\n            color,\r\n            start: getStartingPoint(),\r\n            width: rectWidth,\r\n            percent: Math.round((rectWidth / width) * 100),\r\n          };\r\n          rectArr.push(obj);\r\n          setTab((prev: Tab) => {\r\n            return {\r\n              ...prev,\r\n              shapeArr: rectArr,\r\n            };\r\n          });\r\n\r\n          drawRects(e.target);\r\n          createGradient();\r\n        }\r\n      }\r\n    },\r\n    /* eslint-disable */\r\n    [getStartingPoint, createGradient, setTab]\r\n    /* eslint-enable */\r\n  );\r\n\r\n  const drawRects = useCallback(\r\n    (canvas: HTMLCanvasElement, clear = false) => {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const { width, height } = canvas;\r\n      if (ctx) {\r\n        ctx.strokeStyle = \"#fff\";\r\n        ctx.globalAlpha = 1;\r\n        if (clear) {\r\n          ctx.clearRect(0, 0, width, height);\r\n        }\r\n        for (let i of rectArr) {\r\n          if (i.color !== \"transparent\") {\r\n            ctx.fillStyle = i.color;\r\n          } else {\r\n            ctx.fillStyle = transparentPattern as CanvasPattern;\r\n          }\r\n\r\n          ctx.beginPath();\r\n          ctx.fillRect(i.start, 0, i.width, height);\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n        }\r\n      }\r\n    },\r\n    [transparentPattern]\r\n  );\r\n\r\n  function removePrev() {\r\n    const { current: div } = previewRef;\r\n    if (div instanceof HTMLDivElement) {\r\n      div.classList.add(\"hide\");\r\n    }\r\n  }\r\n\r\n  function showPrev() {\r\n    const { current: div } = previewRef;\r\n\r\n    if (div instanceof HTMLDivElement) {\r\n      div.classList.toggle(\"hide\");\r\n    }\r\n  }\r\n\r\n  const clearAll = useCallback(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      const { width, height } = canvas;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n        rectArr = [];\r\n\r\n        setTab((prev: Tab) => {\r\n          return {\r\n            ...prev,\r\n            shapeArr: [],\r\n            direction: 90,\r\n            gradient: \"\",\r\n          };\r\n        });\r\n\r\n        removePrev();\r\n      }\r\n    }\r\n  }, [canvasRef, setTab]);\r\n\r\n  const clearCanvas = useCallback(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas instanceof HTMLCanvasElement) {\r\n      const { width, height } = canvas;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n        rectArr = [];\r\n        setTab((prev: Tab) => {\r\n          return {\r\n            ...prev,\r\n            percents: [],\r\n            shapeArr: [],\r\n            gradient: \"\",\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }, [canvasRef, setTab]);\r\n\r\n  useEffect(() => {\r\n    createGradient();\r\n\r\n    const { current: div } = previewRef;\r\n\r\n    if (div) {\r\n      div.style.backgroundImage = gradient || \"\";\r\n    }\r\n  }, [direction, stops, gradient, createGradient, previewRef]);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        drawRects(canvas);\r\n      }\r\n      canvas.addEventListener(\"mousemove\", drawLine);\r\n      canvas.addEventListener(\"click\", pushRect);\r\n      canvas.addEventListener(\"mouseout\", () => {\r\n        drawRects(canvas, true);\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [canvasRef, drawLine, pushRect]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    if (selectedColor && selectedColor !== color) {\r\n      color = selectedColor;\r\n    }\r\n  }, [selectedColor]);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (tab.shapeArr && tab.type === \"linear\") {\r\n      rectArr = (tab.shapeArr as rectArrType) || [];\r\n\r\n      if (canvas) {\r\n        drawRects(canvas);\r\n        if (!tab.gradient) {\r\n          createGradient();\r\n        }\r\n      }\r\n    }\r\n  }, [tab, canvasRef, drawRects, createGradient]);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n    if (canvas instanceof HTMLCanvasElement) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx && tab.name !== name) {\r\n        name = tab.name;\r\n        rectArr = [];\r\n        drawRects(canvas, true);\r\n      }\r\n    }\r\n    /* eslint-disable */\r\n  }, [tab, canvasRef]);\r\n  /* eslint-enable */\r\n\r\n  return (\r\n    <div className=\"canvas-container\">\r\n      {screenWidth.width < screenWidth.sm && (\r\n        <canvas\r\n          width=\"250\"\r\n          height=\"250\"\r\n          ref={canvasRef}\r\n          className=\"canvas-container__canvas\"\r\n        >\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n      {screenWidth.width >= screenWidth.sm && (\r\n        <canvas\r\n          width=\"300\"\r\n          height=\"300\"\r\n          ref={canvasRef}\r\n          className=\"canvas-container__canvas\"\r\n        >\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n\r\n      <div>\r\n        <button onClick={clearAll} className=\"canvas-container__button\">\r\n          {data.gradientPage.canvasButtonsText[0]}\r\n        </button>\r\n        <button onClick={showPrev} className=\"canvas-container__button\">\r\n          {data.gradientPage.canvasButtonsText[1]}\r\n        </button>\r\n        <button onClick={clearCanvas} className=\"canvas-container__button\">\r\n          {data.gradientPage.canvasButtonsText[2]}\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"canvas-container__preview hide\"\r\n        onClick={removePrev}\r\n        ref={previewRef}\r\n        style={{ backgroundImage: tab.gradient || \"\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinearCanvas;\r\n","import { useRef, useEffect, useCallback, useContext, useState } from \"react\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { Circle, circleArrType } from \"Types/CanvasTypes\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\n\r\nimport \"./RadialCanvas.scss\";\r\nimport { useUtils } from \"hooks/useUtils\";\r\nimport { useLoadImages } from \"hooks/useLoadImages\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport { ScreenDimensionContext } from \"context/ScreenDimensionContext\";\r\n\r\nlet circleArr: circleArrType = [];\r\n\r\nlet selectedColor = \"#ffffff\";\r\n\r\nfunction RadialCanvas() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const previewRef = useRef<HTMLDivElement>(null);\r\n  const { activeTab: tab, setActiveTab: setTab } = useContext(activeTabContext);\r\n  const { gradient } = tab;\r\n  const [stops, setStops] = useState<boolean>(tab.stops || false);\r\n  const [center, setCenter] = useState<[number, number]>(\r\n    tab.center || [50, 50]\r\n  );\r\n  const { clamp } = useUtils();\r\n\r\n  const { data: screenWidth } = useContext(ScreenDimensionContext);\r\n\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  const { transparentPattern } = useLoadImages(canvasRef);\r\n\r\n  function circleRadius(x: number, y: number, width: number, height: number) {\r\n    let origin = [width, height];\r\n    const eq = (x - origin[0]) ** 2 + (y - origin[1]) ** 2;\r\n    return Math.sqrt(eq);\r\n  }\r\n\r\n  const drawCircles = useCallback(\r\n    (canvas: HTMLCanvasElement, clear = false) => {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const { width, height } = canvas;\r\n      if (ctx) {\r\n        if (clear) {\r\n          ctx.clearRect(0, 0, width, height);\r\n        }\r\n        for (let i of circleArr) {\r\n          ctx.beginPath();\r\n          if (i.color !== \"transparent\") {\r\n            ctx.fillStyle = i.color;\r\n          } else {\r\n            ctx.fillStyle = transparentPattern as CanvasPattern;\r\n          }\r\n          ctx.strokeStyle = \"#fff\";\r\n          ctx.arc(width / 2, height / 2, i.radius, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n        }\r\n      }\r\n    },\r\n    [transparentPattern]\r\n  );\r\n\r\n  const drawLine = useCallback(\r\n    (e: MouseEvent) => {\r\n      const { target: canvas, offsetX: x, offsetY: y } = e;\r\n\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        const { width, height } = canvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const lastRadius = circleArr[0] ? circleArr[0].radius : 0;\r\n        const radius = clamp(circleRadius(x, y, width, height), 0, width / 2);\r\n\r\n        if (ctx && radius > lastRadius) {\r\n          ctx.clearRect(0, 0, width, height);\r\n          ctx.save();\r\n          if (selectedColor !== \"transparent\") {\r\n            ctx.fillStyle = selectedColor;\r\n          } else {\r\n            ctx.fillStyle = transparentPattern as CanvasPattern;\r\n          }\r\n          ctx.strokeStyle = \"white\";\r\n          ctx.lineWidth = 2;\r\n          ctx.globalAlpha = 0.5;\r\n          ctx.beginPath();\r\n          ctx.arc(width / 2, height / 2, radius, 0, 2 * Math.PI);\r\n          ctx.fill();\r\n          ctx.stroke();\r\n          ctx.closePath();\r\n\r\n          ctx.restore();\r\n\r\n          if (circleArr.length > 0) {\r\n            drawCircles(canvas);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [drawCircles, clamp, transparentPattern]\r\n  );\r\n\r\n  const createGradient = useCallback(() => {\r\n    let [cx, cy] = center;\r\n\r\n    let grad = `radial-gradient(circle at ${\r\n      cx === 50 && cy === 50 ? \"center\" : `${cx}% ${cy}%`\r\n    }, `;\r\n    const percentList = circleArr.map((item, i) => {\r\n      const slice = circleArr.slice(0, i);\r\n      return slice.reduce((acc, crr) => {\r\n        return acc + crr.percent;\r\n      }, 0);\r\n    });\r\n\r\n    if (circleArr.length === 1) {\r\n      let { color } = circleArr[0];\r\n      console.log(grad);\r\n      grad += `${color}, ${color})`;\r\n\r\n      return setTab((prev: Tab) => {\r\n        return {\r\n          ...prev,\r\n          gradient: grad,\r\n        };\r\n      });\r\n    }\r\n\r\n    if (stops) {\r\n      percentList.shift();\r\n      for (let i = 0; i < circleArr.length; i++) {\r\n        const circle = circleArr[circleArr.length - 1 - i];\r\n        if (i !== circleArr.length - 1) {\r\n          grad += `${circle.color} ${percentList[i]}%, `;\r\n        } else {\r\n          grad += `${circle.color} 100%)`;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < circleArr.length; i++) {\r\n        const circle = circleArr[circleArr.length - 1 - i];\r\n        if (i !== circleArr.length - 1) {\r\n          grad += `${circle.color} ${percentList[i]}% ${percentList[i + 1]}%, `;\r\n        } else {\r\n          grad += `${circle.color} ${percentList[i]}% 100%)`;\r\n        }\r\n      }\r\n    }\r\n    console.log(grad);\r\n    setTab((prev: Tab) => {\r\n      return {\r\n        ...prev,\r\n        gradient: grad,\r\n      };\r\n    });\r\n  }, [center, stops, setTab]);\r\n\r\n  const pushCircle = useCallback(\r\n    (e: MouseEvent) => {\r\n      const { target: canvas, offsetX: x, offsetY: y } = e;\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        const { width, height } = canvas;\r\n        const lastRadius = circleArr[0] ? circleArr[0].radius : 0;\r\n        const radius = clamp(circleRadius(x, y, width, height), 0, width / 2);\r\n\r\n        if (radius > lastRadius) {\r\n          const obj: Circle = {\r\n            color: selectedColor,\r\n            radius: Math.floor(radius),\r\n            percent: Math.floor(((radius - lastRadius) / width / 2) * 100),\r\n          };\r\n          circleArr.unshift(obj);\r\n          drawCircles(canvas);\r\n          createGradient();\r\n        }\r\n      }\r\n    },\r\n    [drawCircles, createGradient, clamp]\r\n  );\r\n\r\n  const showPrev = useCallback(() => {\r\n    const { current: prev } = previewRef;\r\n    if (prev) {\r\n      prev.classList.toggle(\"hide\");\r\n    }\r\n  }, [previewRef]);\r\n\r\n  const removePrev = useCallback(() => {\r\n    const { current: prev } = previewRef;\r\n\r\n    if (prev) {\r\n      prev.classList.add(\"hide\");\r\n    }\r\n  }, [previewRef]);\r\n\r\n  const clearCanvas = useCallback(\r\n    (clear: boolean = false) => {\r\n      const { current: canvas } = canvasRef;\r\n      if (canvas) {\r\n        const { width, height } = canvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (ctx) {\r\n          ctx.clearRect(0, 0, width, height);\r\n          if (clear) {\r\n            circleArr = [];\r\n            setTab((prev: Tab) => {\r\n              return {\r\n                ...prev,\r\n                gradient: \"\",\r\n                percents: [],\r\n                shapeArr: [],\r\n              };\r\n            });\r\n          } else {\r\n            drawCircles(canvas);\r\n          }\r\n          removePrev();\r\n        }\r\n      }\r\n    },\r\n    [canvasRef, drawCircles, removePrev, setTab]\r\n  );\r\n\r\n  const clearAll = useCallback(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      clearCanvas(true);\r\n      circleArr = [];\r\n      setTab((prev: Tab) => {\r\n        return {\r\n          ...prev,\r\n          colors: [],\r\n          percents: [],\r\n          shapeArr: [],\r\n          center: [50, 50],\r\n          gradient: \"\",\r\n        };\r\n      });\r\n    }\r\n  }, [canvasRef, setTab, clearCanvas]);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      canvas.addEventListener(\"mousemove\", drawLine);\r\n      canvas.addEventListener(\"click\", pushCircle);\r\n      canvas.addEventListener(\"mouseout\", () => drawCircles(canvas, true));\r\n    }\r\n    /* eslint-disable */\r\n  }, [canvasRef, drawLine, pushCircle, clearCanvas]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    console.log(tab.selectedColor);\r\n    if (tab.selectedColor) {\r\n      selectedColor = tab.selectedColor;\r\n    } else {\r\n      selectedColor = \"#ffffff\";\r\n    }\r\n  }, [tab]);\r\n\r\n  useEffect(() => {\r\n    if (gradient && previewRef.current) {\r\n      const { current: prev } = previewRef;\r\n\r\n      if (prev) {\r\n        prev.style.backgroundImage = gradient;\r\n      }\r\n    }\r\n  }, [gradient, previewRef]);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (tab && tab.type === \"radial\") {\r\n      circleArr = (tab.shapeArr as circleArrType) || [];\r\n\r\n      if (canvas) {\r\n        drawCircles(canvas);\r\n        if (!tab.gradient) {\r\n          createGradient();\r\n        }\r\n      }\r\n    }\r\n  }, [tab, canvasRef, createGradient, drawCircles]);\r\n\r\n  useEffect(() => {\r\n    const { center: tabCenter, stops: tabStops } = tab;\r\n\r\n    setCenter(tabCenter as [number, number]);\r\n    setStops(tabStops as boolean);\r\n  }, [tab]);\r\n\r\n  useEffect(() => {\r\n    createGradient();\r\n  }, [createGradient]);\r\n\r\n  return (\r\n    <div className=\"canvas-container\">\r\n      {screenWidth.width < screenWidth.sm && (\r\n        <canvas width=\"250\" height=\"250\" ref={canvasRef}>\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n      {screenWidth.width >= screenWidth.sm && (\r\n        <canvas width=\"300\" height=\"300\" ref={canvasRef}>\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n      <div>\r\n        <button className=\"canvas-container__button\" onClick={clearAll}>\r\n          {data.gradientPage.canvasButtonsText[0]}\r\n        </button>\r\n        <button className=\"canvas-container__button\" onClick={showPrev}>\r\n          {data.gradientPage.canvasButtonsText[1]}\r\n        </button>\r\n        <button\r\n          className=\"canvas-container__button\"\r\n          onClick={() => clearCanvas(true)}\r\n        >\r\n          {data.gradientPage.canvasButtonsText[2]}\r\n        </button>\r\n      </div>\r\n      <div className=\"preview hide\" ref={previewRef} onClick={removePrev}></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadialCanvas;\r\n","import { useRef, useEffect, useContext, useCallback } from \"react\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { arcArrType, Arc } from \"Types/CanvasTypes\";\r\nimport { Tab } from \"../../../Types/GradgenBuilderTypes\";\r\nimport { useLoadImages } from \"hooks/useLoadImages\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport { ScreenDimensionContext } from \"context/ScreenDimensionContext\";\r\nimport { Coord } from \"../../../Types/GlobalTypes\";\r\n\r\nconst lastCoord: Coord = [0, 0];\r\n\r\nlet color: string = \"#ffffff\";\r\nlet arcArr: arcArrType = [];\r\n\r\nfunction ConicCanvas() {\r\n  const { activeTab: tab, setActiveTab: setTab } = useContext(activeTabContext);\r\n  const previewRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  const { transparentPattern } = useLoadImages(canvasRef);\r\n  const { data: screenWidth } = useContext(ScreenDimensionContext);\r\n\r\n  function createGradient() {\r\n    let grad = \"conic-gradient(\";\r\n\r\n    if (!arcArr || !arcArr.length) {\r\n      return;\r\n    }\r\n\r\n    const { stops } = tab;\r\n    const percentList: number[] = arcArr\r\n      .map((item, index) => {\r\n        let slice = arcArr.slice(0, index);\r\n        return slice.reduce((acc: number, crr: Arc) => {\r\n          return acc + crr.percent;\r\n        }, 0);\r\n      })\r\n      .map((item) => {\r\n        return parseInt(((item / 100) * 360).toString());\r\n      });\r\n\r\n    if (arcArr.length === 1) {\r\n      let { color } = arcArr[0];\r\n      grad += `${color}, ${color})`;\r\n      setTab((prev: Tab): Tab => {\r\n        return {\r\n          ...prev,\r\n          gradient: grad,\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (stops) {\r\n      let first = arcArr[0].color;\r\n      let last = arcArr[arcArr.length - 1].color;\r\n\r\n      for (let i = 0; i < arcArr.length - 1; i++) {\r\n        grad += `${arcArr[i].color}, `;\r\n      }\r\n      grad += `${last}, ${first})`;\r\n    } else {\r\n      for (let i = 0; i < arcArr.length; i++) {\r\n        if (percentList[i + 1]) {\r\n          grad += `${arcArr[i].color} ${percentList[i]}deg ${\r\n            percentList[i + 1]\r\n          }deg, `;\r\n        } else {\r\n          grad += `${arcArr[i].color} ${percentList[i]}deg 360deg)`;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(grad);\r\n\r\n    setTab((prev: Tab) => {\r\n      return {\r\n        ...prev,\r\n        gradient: grad,\r\n      };\r\n    });\r\n  }\r\n\r\n  function calcPercent(x: number, y: number, center: Coord): number[] {\r\n    let startAngle: number = 0 * Math.PI;\r\n    let endAngle = Math.atan2(center[1] - y, center[0] - x);\r\n    if (arcArr && arcArr.length) {\r\n      startAngle = arcArr[arcArr.length - 1].endAngle;\r\n    }\r\n\r\n    let start =\r\n      startAngle < 0 ? 2 * Math.PI - Math.abs(startAngle) : startAngle;\r\n    let end = endAngle < 0 ? 2 * Math.PI - Math.abs(endAngle) : endAngle;\r\n\r\n    let percent: number = Math.abs(((end - start) * 100) / (2 * Math.PI));\r\n    let leftToDraw =\r\n      100 -\r\n      arcArr.reduce((acc: number, crr: Arc) => {\r\n        return acc + crr.percent;\r\n      }, 0);\r\n    return [startAngle, endAngle, parseFloat(percent.toFixed(2)), leftToDraw];\r\n  }\r\n\r\n  const drawArcs = useCallback(\r\n    (canvas: HTMLCanvasElement, clear: boolean = false): void => {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      if (ctx) {\r\n        const { width, height } = canvas;\r\n        const center: Coord = [width / 2, height / 2];\r\n        if (clear) {\r\n          ctx.clearRect(0, 0, width, height);\r\n        }\r\n        if (arcArr && arcArr.length) {\r\n          ctx.save();\r\n          ctx.strokeStyle = \"#ffffff\";\r\n          for (let i of arcArr) {\r\n            ctx.beginPath();\r\n            if (i.color !== \"transparent\") {\r\n              ctx.fillStyle = i.color;\r\n            } else {\r\n              ctx.fillStyle = transparentPattern as CanvasPattern;\r\n            }\r\n            ctx.moveTo(...center);\r\n            ctx.arc(...center, center[0], i.startAngle, i.endAngle);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n          }\r\n          ctx.restore();\r\n        }\r\n      }\r\n    },\r\n    [transparentPattern]\r\n  );\r\n\r\n  const pushArc = useCallback(\r\n    (e: MouseEvent): void => {\r\n      const { target: canvas, offsetX: x, offsetY: y } = e;\r\n      const [lastX, lastY] = lastCoord;\r\n      if (x === lastX && y === lastY) {\r\n        return;\r\n      }\r\n\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        const { width, height } = canvas;\r\n        const canvasCenter: Coord = [width / 2, height / 2];\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (ctx) {\r\n          let [startAngle, endAngle, percent, leftToDraw] = calcPercent(\r\n            x,\r\n            y,\r\n            canvasCenter\r\n          );\r\n\r\n          if (percent <= leftToDraw) {\r\n            let obj: Arc = {\r\n              color,\r\n              startAngle,\r\n              endAngle,\r\n              percent: parseFloat(percent.toFixed(2)),\r\n            };\r\n\r\n            arcArr.push(obj);\r\n            setTab((prev: Tab): Tab => {\r\n              return {\r\n                ...prev,\r\n                shapeArr: arcArr,\r\n              };\r\n            });\r\n\r\n            drawArcs(canvas);\r\n            createGradient();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /* eslint-disable */\r\n    [drawArcs, createGradient]\r\n    /* eslint-enable */\r\n  );\r\n\r\n  const drawLine = useCallback(\r\n    (e: MouseEvent): void => {\r\n      const { target: canvas, offsetX: x, offsetY: y } = e;\r\n      if (canvas instanceof HTMLCanvasElement) {\r\n        const { width, height } = canvas;\r\n        const ctx = canvas.getContext(\"2d\");\r\n\r\n        const canvasCenter: Coord = [width / 2, height / 2];\r\n\r\n        if (ctx) {\r\n          let [startAngle, endAngle, percent, leftToDraw] = calcPercent(\r\n            x,\r\n            y,\r\n            canvasCenter\r\n          );\r\n\r\n          ctx.clearRect(0, 0, width, height);\r\n          if (percent <= leftToDraw) {\r\n            ctx.save();\r\n            ctx.globalAlpha = 0.5;\r\n            if (color !== \"transparent\") {\r\n              ctx.fillStyle = color;\r\n            } else {\r\n              ctx.fillStyle = transparentPattern as CanvasPattern;\r\n            }\r\n            ctx.strokeStyle = \"#ffffff\";\r\n            ctx.beginPath();\r\n            ctx.moveTo(...canvasCenter);\r\n            ctx.arc(...canvasCenter, canvasCenter[0], startAngle, endAngle);\r\n            ctx.lineTo(...canvasCenter);\r\n            ctx.fill();\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n            ctx.restore();\r\n          }\r\n          drawArcs(canvas);\r\n        }\r\n      }\r\n    },\r\n    [drawArcs, transparentPattern]\r\n  );\r\n\r\n  const clearCanvas = useCallback((): void => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const { width, height } = canvas;\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n        arcArr = [];\r\n        setTab((prev: Tab): Tab => {\r\n          return {\r\n            ...prev,\r\n            gradient: \"\",\r\n            shapeArr: [],\r\n          };\r\n        });\r\n      }\r\n    }\r\n    /* eslint-disable */\r\n  }, [canvasRef]);\r\n  /* eslint-enable */\r\n\r\n  function clearAll(): void {}\r\n\r\n  function removePrev(): void {\r\n    const { current: preview } = previewRef;\r\n\r\n    if (preview instanceof HTMLDivElement) {\r\n      preview.classList.remove(\"hide\");\r\n    }\r\n  }\r\n\r\n  function showPrev(): void {\r\n    const { current: preview } = previewRef;\r\n\r\n    if (preview instanceof HTMLDivElement) {\r\n      preview.classList.toggle(\"hide\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas instanceof HTMLCanvasElement) {\r\n      canvas.addEventListener(\"mousemove\", drawLine);\r\n      canvas.addEventListener(\"click\", pushArc);\r\n      canvas.addEventListener(\"mouseout\", (e) => drawArcs(canvas, true));\r\n    }\r\n    /* eslint-disable */\r\n  }, [canvasRef]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    if (tab.selectedColor && tab.selectedColor !== color) {\r\n      color = tab.selectedColor;\r\n    }\r\n  }, [tab.selectedColor]);\r\n\r\n  useEffect(() => {\r\n    createGradient();\r\n    /* eslint-disable */\r\n  }, [tab.stops]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      if (tab.shapeArr && tab.shapeArr.length && tab.shapeArr !== arcArr) {\r\n        arcArr = tab.shapeArr as arcArrType;\r\n        drawArcs(canvas);\r\n      }\r\n    }\r\n    /* eslint-disable */\r\n  }, [tab, canvasRef]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    const { current: preview } = previewRef;\r\n    if (preview instanceof HTMLDivElement && tab.gradient) {\r\n      let image = preview.style.backgroundImage;\r\n      if (tab.gradient !== image) {\r\n        preview.style.backgroundImage = tab.gradient;\r\n      }\r\n    }\r\n  }, [tab.gradient]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"canvas-container\">\r\n        {screenWidth.width < screenWidth.sm && (\r\n          <canvas\r\n            className=\"canvas-container__canvas\"\r\n            width=\"250\"\r\n            height=\"250\"\r\n            style={{ transform: \"rotate(-90deg)\" }}\r\n            ref={canvasRef}\r\n          >\r\n            <p>{data.canvasNotSupported}</p>\r\n          </canvas>\r\n        )}\r\n        {screenWidth.width >= screenWidth.sm && (\r\n          <canvas\r\n            className=\"canvas-container__canvas\"\r\n            width=\"300\"\r\n            height=\"300\"\r\n            style={{ transform: \"rotate(-90deg)\" }}\r\n            ref={canvasRef}\r\n          >\r\n            <p>{data.canvasNotSupported}</p>\r\n          </canvas>\r\n        )}\r\n        <div>\r\n          <button className=\"canvas-container__button\" onClick={clearAll}>\r\n            {data.gradientPage.canvasButtonsText[0]}\r\n          </button>\r\n          <button className=\"canvas-container__button\" onClick={showPrev}>\r\n            {data.gradientPage.canvasButtonsText[1]}\r\n          </button>\r\n          <button className=\"canvas-container__button\" onClick={clearCanvas}>\r\n            {data.gradientPage.canvasButtonsText[2]}\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"canvas-container__preview hide\"\r\n          ref={previewRef}\r\n          onClick={removePrev}\r\n        ></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConicCanvas;\r\n","import { Tab, tabArr } from \"Types/GradgenBuilderTypes\";\r\n\r\nimport \"./GradgenTab.scss\";\r\nimport { activeTabContext, defaultValue } from \"context/ActiveTabContext\";\r\nimport { useContext, useState } from \"react\";\r\n\r\ntype Props = {\r\n  item: Tab;\r\n  isActive: Boolean;\r\n  addTab: Boolean;\r\n  setAddTab: Function;\r\n  setGradientTabs: Function;\r\n};\r\n\r\nconst nameLengthActive = 7;\r\nconst nameLengthInnactive = 10;\r\n\r\nfunction GradgenTab({\r\n  item,\r\n  isActive,\r\n  addTab,\r\n  setAddTab,\r\n  setGradientTabs,\r\n}: Props) {\r\n  const { setActiveTab } = useContext(activeTabContext);\r\n  const [hovering, setHovering] = useState<boolean>(false);\r\n\r\n  function tabDeleter(id: string) {\r\n    setGradientTabs((prev: tabArr) => {\r\n      if (prev.length > 1) {\r\n        let copy = [...prev];\r\n        let item = copy[0];\r\n        for (let i of copy) {\r\n          if (i.id === id) {\r\n            item = copy[copy.indexOf(i) - 1];\r\n          }\r\n        }\r\n        copy = copy.filter((item) => {\r\n          return item.id !== id;\r\n        });\r\n\r\n        setActiveTab(copy.length === 1 ? copy[0] : item);\r\n\r\n        return copy;\r\n      } else {\r\n        return [defaultValue];\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div\r\n      className={`tab-container__tab${isActive && !addTab ? \" active\" : \"\"}`}\r\n      key={item.id}\r\n      onClick={() => {\r\n        setActiveTab(item);\r\n        setAddTab(false);\r\n      }}\r\n    >\r\n      <p>\r\n        {item.name.length <= nameLengthActive\r\n          ? item.name\r\n          : `${item.name.slice(0, nameLengthActive - 3)}...`}\r\n      </p>\r\n\r\n      <button\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          tabDeleter(item.id);\r\n        }}\r\n        onMouseOver={(e) => e.stopPropagation()}\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GradgenTab;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { HiXMark, HiCheck } from \"react-icons/hi2\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\nimport \"./ColorList.scss\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { PageTextContext } from \"../../../context/PageTextContext\";\r\n\r\ntype Props = {\r\n  tab?: Tab;\r\n  setTab?: any;\r\n  changer: boolean;\r\n};\r\n\r\nfunction ColorList({ tab, setTab, changer }: Props) {\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n  const [colors, setColors] = useState<string[]>(\r\n    tab?.colors ? tab.colors : activeTab.colors\r\n  );\r\n  const { data } = useContext(PageTextContext);\r\n  function addColor(e: any): void {\r\n    const setter = setTab ? setTab : setActiveTab;\r\n    if (e.target instanceof HTMLFormElement) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      const input = e.target.querySelector(\"input[type='color']\");\r\n      const callback = (prev: Tab) => {\r\n        if (prev.colors.length) {\r\n          return {\r\n            ...prev,\r\n            colors: [...colors, input.value],\r\n          };\r\n        }\r\n        return {\r\n          ...prev,\r\n          colors: [...colors, input.value],\r\n          selectedColor: input.value,\r\n        };\r\n      };\r\n      if (input instanceof HTMLInputElement) {\r\n        setter(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  function deleteColor(item: string) {\r\n    if (activeTab || tab) {\r\n      return (e: any) => {\r\n        e.preventDefault();\r\n        const filter = colors.filter((color) => item !== color);\r\n        const callback = (prev: any) => {\r\n          return {\r\n            ...prev,\r\n            colors: filter,\r\n          };\r\n        };\r\n        tab && setTab ? setTab(callback) : setActiveTab(callback);\r\n      };\r\n    }\r\n    return () => {};\r\n  }\r\n\r\n  function changeColor(item: string) {\r\n    if (changer) {\r\n      const transparent = document.querySelector(\".color__transparent\");\r\n      return (e: any) => {\r\n        if (transparent) {\r\n          transparent.classList.remove(\"active\");\r\n        }\r\n        const li = e.target;\r\n        if (li instanceof HTMLLIElement) {\r\n          const parent = li.parentElement;\r\n          if (parent) {\r\n            const children = Array.from(parent.children);\r\n\r\n            children.forEach((item) => {\r\n              item.classList.remove(\"active\");\r\n            });\r\n          }\r\n          li.classList.toggle(\"active\");\r\n          if (li.classList.contains(\"active\")) {\r\n            setActiveTab((prev: any) => {\r\n              return {\r\n                ...prev,\r\n                selectedColor: item,\r\n              };\r\n            });\r\n          } else {\r\n            setActiveTab((prev: any) => {\r\n              return {\r\n                ...prev,\r\n                selectedColor: \"#ffffff\",\r\n              };\r\n            });\r\n          }\r\n        }\r\n      };\r\n    } else {\r\n      return () => {};\r\n    }\r\n  }\r\n\r\n  function clearColorList(): void {\r\n    const setter = tab && setTab ? setTab : setActiveTab;\r\n    setter((prev: Tab) => {\r\n      return {\r\n        ...prev,\r\n        colors: [],\r\n      };\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tab) {\r\n      setColors(tab.colors);\r\n    } else {\r\n      setColors(activeTab.colors);\r\n    }\r\n  }, [tab, activeTab]);\r\n  return (\r\n    <div className=\"color-list\">\r\n      <h3>{data.gradientPage.colorListTitle}</h3>\r\n      <ul className=\"color-list__list\">\r\n        {colors &&\r\n          colors.length > 0 &&\r\n          colors.map((item, i) => (\r\n            <li\r\n              key={i}\r\n              className={`color-list__item${\r\n                i === 0 && changer ? \" active\" : \"\"\r\n              }`}\r\n              onClick={changeColor(item)}\r\n              onContextMenu={deleteColor(item)}\r\n              title={item}\r\n            >\r\n              <div\r\n                className=\"color-list__color\"\r\n                style={{ backgroundColor: item }}\r\n              ></div>\r\n            </li>\r\n          ))}\r\n\r\n        {activeTab && colors.length === 0 && (\r\n          <p>{data.gradientPage.colorListAddText}</p>\r\n        )}\r\n      </ul>\r\n\r\n      <form\r\n        onSubmit={addColor}\r\n        className=\"color-list__form\"\r\n        id=\"color-list-form\"\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          className=\"color-list__clear\"\r\n          onClick={clearColorList}\r\n        >\r\n          <HiXMark />\r\n        </button>\r\n        <input type=\"color\" placeholder=\"Adicionar Nova Cor\" />\r\n\r\n        <button type=\"submit\" form=\"color-list-form\">\r\n          <HiCheck />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorList;\r\n","import React, { ChangeEvent, useContext, useEffect, useState } from \"react\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\n\r\nimport \"./ChangeGradType.scss\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\ntype Props = {\r\n  tab?: Tab;\r\n  setTab?: Function;\r\n};\r\n\r\ninterface GradType {\r\n  type: string;\r\n  modifiedBy: \"tab\" | \"changer\" | \"\";\r\n}\r\n\r\nfunction ChangeGradType({ tab, setTab }: Props) {\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n\r\n  const { data } = useContext(PageTextContext);\r\n  const [type, setType] = useState<GradType>({\r\n    type: tab?.type || activeTab.type,\r\n    modifiedBy: \"\",\r\n  });\r\n\r\n  function gradTypeChanger(e: ChangeEvent) {\r\n    const { target: input } = e;\r\n    if (input instanceof HTMLInputElement) {\r\n      const { value } = input;\r\n\r\n      setType({\r\n        type: value,\r\n        modifiedBy: \"changer\",\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (type.modifiedBy !== \"changer\") {\r\n      return;\r\n    }\r\n    const callback = (prev: Tab) => {\r\n      switch (type.type) {\r\n        case \"linear\":\r\n          return {\r\n            ...prev,\r\n            colors: [],\r\n            type: type.type,\r\n            percents: [],\r\n            gradient: \"\",\r\n            stops: true,\r\n            direction: 90,\r\n            shapeArr: [],\r\n            selectedColor: \"#ffffff\",\r\n          };\r\n        case \"radial\":\r\n          return {\r\n            ...prev,\r\n            colors: [],\r\n            type: type.type,\r\n            percents: [],\r\n            gradient: \"\",\r\n            stops: true,\r\n            shapeArr: [],\r\n\r\n            center: [50, 50],\r\n            selectedColor: \"#ffffff\",\r\n          };\r\n        case \"conic\":\r\n          return {\r\n            ...prev,\r\n            colors: [],\r\n            type: type.type,\r\n            percents: [],\r\n            gradient: \"\",\r\n            stops: true,\r\n            shapeArr: [],\r\n            direction: 90,\r\n            selectedColor: \"#ffffff\",\r\n          };\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        colors: [],\r\n        type: type.type,\r\n        shapeArr: [],\r\n        percents: [],\r\n        gradient: \"\",\r\n      };\r\n    };\r\n    if (tab && setTab) {\r\n      setTab(callback);\r\n    } else {\r\n      setActiveTab(callback);\r\n    }\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    setType({\r\n      type: activeTab.type,\r\n      modifiedBy: \"tab\",\r\n    });\r\n  }, [activeTab]);\r\n\r\n  return (\r\n    <div className=\"grad-type\">\r\n      <h3>{data.gradientPage.gradientTypeTitle}</h3>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"grad-type\"\r\n            className=\"grad-type__radio\"\r\n            value=\"linear\"\r\n            onChange={gradTypeChanger}\r\n            checked={type.type === \"linear\" ? true : false}\r\n          />\r\n          <span>{data.gradientPage.gradientTypes[0]}</span>\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"grad-type\"\r\n            className=\"grad-type__radio\"\r\n            value=\"radial\"\r\n            onChange={gradTypeChanger}\r\n            checked={type.type === \"radial\" ? true : false}\r\n          />\r\n          <span>{data.gradientPage.gradientTypes[1]}</span>\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"grad-type\"\r\n            className=\"grad-type__radio\"\r\n            value=\"conic\"\r\n            onChange={gradTypeChanger}\r\n            checked={type.type === \"conic\" ? true : false}\r\n          />\r\n          <span>{data.gradientPage.gradientTypes[2]}</span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeGradType;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tab, tabArr } from \"Types/GradgenBuilderTypes\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport ColorList from \"../ColorList/ColorList\";\r\nimport ChangeGradType from \"../ChangeGradType/ChangeGradType\";\r\n\r\nimport \"./AddTab.scss\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\ntype Props = {\r\n  setGradientTabs: Function;\r\n  gradientTabs: tabArr;\r\n  toggler: Function;\r\n};\r\n\r\nlet createdNewTab: boolean = false;\r\n\r\nfunction AddTab({ setGradientTabs, gradientTabs, toggler }: Props) {\r\n  const [newTab, setNewTab] = useState<Tab>({\r\n    name: \"New Tab\",\r\n    id: uuidV4(),\r\n    colors: [],\r\n    shapeArr: [],\r\n    type: \"linear\",\r\n    selectedColor: \"#ffffff\",\r\n  });\r\n\r\n  const { setActiveTab } = useContext(activeTabContext);\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  function addTab() {\r\n    createdNewTab = true;\r\n    console.log(newTab);\r\n    setGradientTabs((prev: tabArr) => {\r\n      return [...prev, newTab];\r\n    });\r\n    setActiveTab(newTab);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (createdNewTab) {\r\n      createdNewTab = false;\r\n      toggler(false);\r\n      setActiveTab(gradientTabs.slice(-1)[0]);\r\n    }\r\n  }, [gradientTabs, setActiveTab, toggler]);\r\n\r\n  useEffect(() => {\r\n    console.log(newTab);\r\n  }, [newTab]);\r\n  return (\r\n    <>\r\n      <div className=\"add-tab\">\r\n        <h3>{data.gradientPage.addTabText.title}</h3>\r\n        <label className=\"add-tab__name\">\r\n          <span>{data.gradientPage.addTabText.name}</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"\"\r\n            id=\"\"\r\n            placeholder={data.gradientPage.addTabText.namePlaceholder}\r\n            onChange={(e) => {\r\n              console.log(e.target.value !== \"\", e.target.value);\r\n              setNewTab((prev: Tab) => {\r\n                return {\r\n                  ...prev,\r\n                  name: e.target.value ? e.target.value : \"New Tab\",\r\n                };\r\n              });\r\n            }}\r\n          />\r\n        </label>\r\n        <ChangeGradType tab={newTab} setTab={setNewTab} />\r\n        <ColorList tab={newTab} setTab={setNewTab} changer={false} />\r\n        <button onClick={addTab} className=\"add-tab__add\">\r\n          {data.gradientPage.addTabText.submit}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddTab;\r\n","import { activeTabContext } from \"context/ActiveTabContext\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\n\r\nimport \"./ColorTransparent.scss\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\nfunction ColorTransparent() {\r\n  const { setActiveTab } = useContext(activeTabContext);\r\n\r\n  const { data } = useContext(PageTextContext);\r\n  function setTransparent(e: any) {\r\n    if (e.target instanceof HTMLButtonElement) {\r\n      setActiveTab((prev: Tab) => {\r\n        return {\r\n          ...prev,\r\n          selectedColor: \"transparent\",\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        title={data.gradientPage.transparentText}\r\n        className=\"color__transparent\"\r\n        onClick={setTransparent}\r\n      ></button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ColorTransparent;\r\n","import React, { useContext } from \"react\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\n\r\nimport \"./ChangeColorStops.scss\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\nfunction ChangeColorStops() {\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n  const { data } = useContext(PageTextContext);\r\n  return (\r\n    <label className=\"options__trans-label\">\r\n      <span>{data.gradientPage.stopsText}</span>\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={(e) => {\r\n          setActiveTab((prev: Tab) => {\r\n            return {\r\n              ...prev,\r\n              stops: e.target.checked,\r\n            };\r\n          });\r\n        }}\r\n        checked={activeTab.stops ? true : false}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default ChangeColorStops;\r\n","import { useContext } from \"react\";\r\nimport { BsArrowUp } from \"react-icons/bs\";\r\n\r\nimport \"./LinearCanvasOptions.scss\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport ChangeColorStops from \"../ChangeColorStops/ChangeColorStops\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\nfunction LinearCanvasOptions() {\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n  const { data } = useContext(PageTextContext);\r\n  return (\r\n    <div>\r\n      <label className=\"options__direction-label\">\r\n        <span>{data.gradientPage.directionText[0]}</span>\r\n        <input\r\n          type=\"number\"\r\n          value={activeTab.direction || \"\"}\r\n          min={0}\r\n          max={360}\r\n          onChange={(e) => {\r\n            setActiveTab((prev: any) => {\r\n              return {\r\n                ...prev,\r\n                direction: parseInt(e.target.value),\r\n              };\r\n            });\r\n          }}\r\n        />\r\n        <span>{data.gradientPage.directionText[1]}(°)</span>\r\n        <div>\r\n          <BsArrowUp\r\n            style={{\r\n              transform: `rotate(${activeTab.direction || 90}deg)`,\r\n            }}\r\n          />\r\n        </div>\r\n      </label>\r\n      <ChangeColorStops />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinearCanvasOptions;\r\n","import React, { useContext } from \"react\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { ChangeEvent } from \"react\";\r\nimport { Tab } from \"Types/GradgenBuilderTypes\";\r\nimport ChangeColorStops from \"../ChangeColorStops/ChangeColorStops\";\r\nimport { useUtils } from \"hooks/useUtils\";\r\n\r\nimport \"./RadialCanvasOptions.scss\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\nfunction RadialCanvasOptions() {\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n\r\n  const { center } = activeTab;\r\n\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  const { clamp } = useUtils();\r\n\r\n  function changeListener(yChanger: boolean) {\r\n    return (e: ChangeEvent) => {\r\n      if (e.target instanceof HTMLInputElement) {\r\n        let value = parseInt(e.target.value) || 0;\r\n        value = clamp(value, 0, 100);\r\n\r\n        setActiveTab((prev: Tab) => {\r\n          const [x, y] = prev.center ?? [50, 50];\r\n          return {\r\n            ...prev,\r\n            center: yChanger ? [x, value] : [value, y],\r\n          };\r\n        });\r\n      }\r\n    };\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"options__center\">\r\n        <span>{data.gradientPage.centerText}</span>\r\n        <label htmlFor=\"\" className=\"center__label\">\r\n          <span>X:</span>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={center ? center[0] : 50}\r\n            onChange={changeListener(false)}\r\n          />\r\n          <span>%</span>\r\n        </label>\r\n        <label htmlFor=\"\" className=\"center__label\">\r\n          <span>Y:</span>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={center ? center[1] : 50}\r\n            onChange={changeListener(true)}\r\n          />\r\n          <span>%</span>\r\n        </label>\r\n      </div>\r\n      <ChangeColorStops />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RadialCanvasOptions;\r\n","import ChangeColorStops from \"../ChangeColorStops/ChangeColorStops\";\r\nfunction ConicCanvasOptions() {\r\n  return (\r\n    <div>\r\n      <ChangeColorStops />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConicCanvasOptions;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { BsClipboardPlus, BsClipboardCheck } from \"react-icons/bs\";\r\nimport \"./GradgenClipboard.scss\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\n\r\nfunction GradgenClipboard() {\r\n  const [copied, setCopied] = useState<boolean>(false);\r\n  const { activeTab } = useContext(activeTabContext);\r\n  const [innerText, setInnerText] = useState<any[]>();\r\n\r\n  function formatLinear(grad: string) {\r\n    const regex = /^(linear-gradient)(\\()([^,]+,)\\s(.+)(\\))$/;\r\n    const list = [];\r\n\r\n    if (grad) {\r\n      const match = grad.match(regex);\r\n\r\n      if (match) {\r\n        const colorRegex =\r\n          /((?:#[a-fA-F0-9]{6})|(?:transparent))\\s(\\d+%)(?:\\s(\\d+%))?/g;\r\n        const colorMatches = Array.from(match[4].matchAll(colorRegex));\r\n        if (colorMatches && colorMatches.length > 0) {\r\n          list.push(<span className=\"code-function\">{match[1]}</span>);\r\n          list.push(<span className=\"code-par\">{match[2]}</span>);\r\n          list.push(<span className=\"code-deg\">{match[3]}</span>);\r\n          for (let i of colorMatches) {\r\n            console.log(i[1]);\r\n            if (i[1] !== \"transparent\") {\r\n              list.push(<span style={{ color: i[1] }}>{i[1]} </span>);\r\n            } else {\r\n              list.push(<span style={{ color: \"white\" }}>transparent </span>);\r\n            }\r\n            list.push(<span className=\"code-percent\">{i[2]}</span>);\r\n            if (i[3]) {\r\n              list.push(<span className=\"code-percent\"> {i[3]}</span>);\r\n            }\r\n            if (i !== colorMatches[colorMatches.length - 1]) {\r\n              list.push(<span>, </span>);\r\n            }\r\n          }\r\n        }\r\n\r\n        list.push(<span className=\"code-par\">{match[5]}</span>);\r\n\r\n        setInnerText(list);\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatRadial(grad: string) {\r\n    const regex = /^(radial-gradient)(\\()([^,]+,)\\s(.+)(\\))$/;\r\n    const list = [];\r\n\r\n    if (grad) {\r\n      const match = grad.match(regex);\r\n\r\n      if (match) {\r\n        const colorReg =\r\n          /((?:#[a-fA-F0-9]{6})|(?:transparent))\\s(\\d+%)(?:\\s(\\d+%))?/g;\r\n        const colorMatches = Array.from(match[4].matchAll(colorReg));\r\n        if (colorMatches && colorMatches.length > 0) {\r\n          list.push(<span className=\"code-function\">{match[1]}</span>);\r\n          list.push(<span className=\"code-par\">{match[2]}</span>);\r\n          list.push(<span className=\"code-deg\">{match[3]}</span>);\r\n          for (let i of colorMatches) {\r\n            if (i[1] !== \"transparent\") {\r\n              list.push(<span style={{ color: i[1] }}>{i[1]} </span>);\r\n            } else {\r\n              list.push(<span style={{ color: \"white\" }}>transparent </span>);\r\n            }\r\n\r\n            // list.push(<span style={{ color: i[1] }}>{i[1]} </span>);\r\n            list.push(<span className=\"code-percent\">{i[2]}</span>);\r\n            if (i[3]) {\r\n              list.push(<span className=\"code-percent\"> {i[3]}</span>);\r\n            }\r\n\r\n            if (i !== colorMatches[colorMatches.length - 1]) {\r\n              list.push(<span>, </span>);\r\n            }\r\n          }\r\n          list.push(<span className=\"code-par\">{match[5]}</span>);\r\n\r\n          setInnerText(list);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function formatConic(grad: string) {\r\n    const regex = /^(conic-gradient)(\\()(.+)(\\))$/;\r\n    const list = [];\r\n\r\n    if (grad) {\r\n      const match = grad.match(regex);\r\n      if (match) {\r\n        const colorReg =\r\n          /((?:#[a-fA-F0-9]{6})|(?:transparent))(?:\\s(\\d+deg)\\s(\\d+deg))?/g;\r\n\r\n        const colorMatches = Array.from(match[3].matchAll(colorReg));\r\n\r\n        if (colorMatches && colorMatches.length > 0) {\r\n          list.push(<span className=\"code-function\">{match[1]}</span>);\r\n          list.push(<span className=\"code-par\">{match[2]}</span>);\r\n          for (let i of colorMatches) {\r\n            if (i[1] !== \"transparent\") {\r\n              list.push(<span style={{ color: i[1] }}>{i[1]} </span>);\r\n            } else {\r\n              list.push(<span style={{ color: \"white\" }}>transparent </span>);\r\n            }\r\n            if (i[2]) {\r\n              list.push(<span className=\"code-percent\">{i[2]} </span>);\r\n              list.push(<span className=\"code-percent\">{i[3]}</span>);\r\n            }\r\n            if (i !== colorMatches[colorMatches.length - 1]) {\r\n              list.push(<span>, </span>);\r\n            }\r\n          }\r\n          list.push(<span className=\"code-par\">{match[4]}</span>);\r\n          setInnerText(list);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const grad = activeTab.gradient;\r\n    if (grad) {\r\n      switch (activeTab.type) {\r\n        case \"linear\":\r\n          formatLinear(grad);\r\n          break;\r\n        case \"radial\":\r\n          formatRadial(grad);\r\n          break;\r\n        case \"conic\":\r\n          formatConic(grad);\r\n          break;\r\n      }\r\n    } else {\r\n      setInnerText([<span></span>]);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  function copyToClipboard() {\r\n    if (activeTab.gradient) {\r\n      let grad = activeTab.gradient;\r\n      navigator.clipboard.writeText(grad + \";\");\r\n    }\r\n    setCopied(true);\r\n\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"grad-options__clipboard\">\r\n      <div>\r\n        <p className=\"clipboard__text\">\r\n          {innerText &&\r\n            innerText.map((item, i) => (\r\n              <React.Fragment key={i}>{item}</React.Fragment>\r\n            ))}\r\n        </p>\r\n      </div>\r\n\r\n      <button\r\n        className=\"clipboard__copy\"\r\n        onClick={copyToClipboard}\r\n        title=\"Copiar CSS\"\r\n      >\r\n        {!copied && <BsClipboardPlus />}\r\n        {copied && <BsClipboardCheck className=\"copied\" />}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GradgenClipboard;\r\n","import { activeTabContext } from \"context/ActiveTabContext\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport { useContext } from \"react\";\r\nimport LinearCanvasOptions from \"../LinearCanvasOptions/LinearCanvasOptions\";\r\nimport RadialCanvasOptions from \"../RadialCanvasOptions/RadialCanvasOptions\";\r\nimport ConicCanvasOptions from \"../ConicCanvasOptions/ConicCanvasOptions\";\r\nimport GradgenClipboard from \"../GradgenClipboard/GradgenClipboard\";\r\n\r\nfunction OptionContainer() {\r\n  const { data } = useContext(PageTextContext);\r\n  const { activeTab } = useContext(activeTabContext);\r\n  return (\r\n    <div className=\"option-container\">\r\n      <h3 className=\"option-container__title\">\r\n        {data.gradientPage.optionTitle}\r\n      </h3>\r\n      <div className=\"option-container__content\"></div>\r\n      {activeTab && activeTab.type === \"linear\" && <LinearCanvasOptions />}\r\n      {activeTab && activeTab.type === \"radial\" && <RadialCanvasOptions />}\r\n      {activeTab && activeTab.type === \"conic\" && <ConicCanvasOptions />}\r\n      <GradgenClipboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionContainer;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport \"./GradgenBuilder.scss\";\r\n\r\nimport { HiPlus } from \"react-icons/hi2\";\r\nimport { Tab, tabArr } from \"Types/GradgenBuilderTypes\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\n\r\nimport LinearCanvas from \"../LinearCanvas/LinearCanvas\";\r\nimport RadialCanvas from \"../RadialCanvas/RadialCanvas\";\r\nimport ConicCanvas from \"../ConicCanvas/ConicCanvas\";\r\n\r\nimport GradgenTab from \"../GradgenTab/GradgenTab\";\r\nimport AddTab from \"../AddTab/AddTab\";\r\nimport ColorList from \"../ColorList/ColorList\";\r\nimport ChangeGradType from \"../ChangeGradType/ChangeGradType\";\r\nimport { activeTabContext } from \"context/ActiveTabContext\";\r\nimport ColorTransparent from \"../ColorTransparent/ColorTransparent\";\r\nimport OptionContainer from \"../OptionContainer/OptionContainer\";\r\nimport TextContent from \"../../Frame/TextContent/TextContent\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport useLocalStorage from \"hooks/useLocalStorage\";\r\n\r\nlet run: boolean = true;\r\n\r\nfunction GradgenBuilder() {\r\n  const [gradientTabs, setGradientTabs] = useLocalStorage<tabArr>(\"tabs\", [\r\n    {\r\n      id: uuidV4(),\r\n      name: \"Novo\",\r\n      type: \"linear\",\r\n      colors: [],\r\n      direction: 20,\r\n      selectedColor: \"#ffffff\",\r\n    },\r\n  ]);\r\n  const { activeTab, setActiveTab } = useContext(activeTabContext);\r\n  const [addTab, setAddTab] = useState<Boolean>(false);\r\n\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  useEffect(() => {\r\n    if (activeTab) {\r\n      const map = gradientTabs.map((item) => {\r\n        if (item.id === activeTab.id) {\r\n          return activeTab;\r\n        } else {\r\n          return item;\r\n        }\r\n      });\r\n      setGradientTabs(map);\r\n    }\r\n  }, [activeTab]);\r\n\r\n  useEffect(() => {\r\n    if (gradientTabs && gradientTabs.length && run) {\r\n      setActiveTab(gradientTabs[0]);\r\n      run = false;\r\n    }\r\n  }, [gradientTabs]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", function (e: any) {\r\n      const colorList = document.querySelectorAll(\".color-list__item\");\r\n\r\n      if (e.target.matches(\".color__transparent\") && colorList) {\r\n        e.target.classList.toggle(\"active\");\r\n\r\n        colorList.forEach((item) => {\r\n          item.classList.remove(\"active\");\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"gradgen\">\r\n        <header className=\"gradgen__tab-container\">\r\n          {gradientTabs &&\r\n            gradientTabs.length !== 0 &&\r\n            gradientTabs.map((item: Tab) => (\r\n              <GradgenTab\r\n                item={item}\r\n                isActive={item.id === activeTab.id}\r\n                addTab={addTab}\r\n                setAddTab={setAddTab}\r\n                setGradientTabs={setGradientTabs}\r\n                key={item.id}\r\n              ></GradgenTab>\r\n            ))}\r\n          <button\r\n            className={`add-btn ${addTab ? \"active\" : \"\"}`}\r\n            onClick={() => {\r\n              setAddTab(true);\r\n            }}\r\n          >\r\n            <HiPlus></HiPlus>\r\n          </button>\r\n        </header>\r\n        {activeTab && !addTab && (\r\n          <main className=\"gradgen__main-container\">\r\n            <div className=\"main-container__color-list\">\r\n              <ColorList changer={true} />\r\n              <ColorTransparent />\r\n            </div>\r\n\r\n            <div>\r\n              <ChangeGradType />\r\n              <div className=\"main-option-container\">\r\n                <OptionContainer />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"md-lg-option-container\">\r\n              <OptionContainer />\r\n            </div>\r\n\r\n            <div className=\"main-container__grad-creator\">\r\n              <h3>{data.gradientPage.canvasCallToAction}</h3>\r\n              {activeTab && activeTab.type === \"linear\" && <LinearCanvas />}\r\n              {activeTab && activeTab.type === \"radial\" && <RadialCanvas />}\r\n              {activeTab && activeTab.type === \"conic\" && <ConicCanvas />}\r\n            </div>\r\n          </main>\r\n        )}\r\n        {addTab && (\r\n          <AddTab\r\n            setGradientTabs={setGradientTabs}\r\n            gradientTabs={gradientTabs}\r\n            toggler={setAddTab}\r\n          />\r\n        )}\r\n      </section>\r\n      <TextContent data={data.gradientPage.textContent} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GradgenBuilder;\r\n","import GradgenBuilder from \"../../components/GradgenPage/GradgenBuilder/GradgenBuilder\";\r\nimport { ActiveTabContextProvider } from \"../../context/ActiveTabContext\";\r\n\r\nfunction Gradgen() {\r\n  return (\r\n    <section>\r\n      <ActiveTabContextProvider>\r\n        <GradgenBuilder />\r\n      </ActiveTabContextProvider>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Gradgen;\r\n"],"names":["Color","_classCallCheck","_createClass","key","value","num","min","max","Math","RGBColor","_Color","_inherits","_super","_createSuper","red","green","blue","_this","alpha","arguments","length","undefined","call","clamp","this","concat","get","HEXColor","_RGBColor","_super2","hex","_i","_arr","parsed","toString","padStart","parseInt","HSLColor","_Color2","_super3","hue","saturation","lightness","_this2","CMYKColor","_Color3","_super4","cyan","magenta","yellow","black","_this3","ColorParser","color","invalidColorMessage","validateHEX","splitHEX","validateCMYK","splitCMYK","validateRGB","splitRGB","validateHSL","splitHSL","includes","test","p","q","t","hueToRGB","round","h","s","l","d","isNaN","_this$color","RGBtoHSL","_this$color2","_this$CMYKtoRGB","CMYKtoRGB","_this$color3","_this$color4","HSLtoRGB","_this$color5","_this$color6","_this$color7","_this$HSLtoRGB","_this$color8","_this$CMYKtoRGB2","_this$color9","RGBtoCMYK","_this$color10","_this$HSLtoRGB2","_match$1$split$map","match","split","map","item","parseFloat","_match$1$split$map2","_slicedToArray","slice","colorComponents","console","log","_step","extended","_iterator","_createForOfIteratorHelper","n","done","repeat","err","e","f","i","component","push","_match$1$split$map3","_match$1$split$map4","_match$1$split$map5","_match$1$split$map6","_ref","_jsxs","className","children","_jsx","style","background","startsWith","rgb","data","contentRef","useRef","title","main","prevs","useEffect","current","innerHTML","ReactMarkdown","ContentExample","contentTitle","items","ContentBlock","defaultData","width","window","screen","availWidth","height","availHeight","xsm","sm","md","lg","xlg","ScreenDimensionContext","createContext","setData","_useState","useState","_useState2","addEventListener","_objectSpread","Provider","defaultValue","localStorage","getItem","JSON","parse","setItem","stringify","state","setState","useUtils","useCallback","all","_len","comparisons","Array","_key","_comparisons","Boolean","sum","_len2","numbers","_key2","reduce","acc","crr","degToRad","deg","PI","radToDeg","rad","cartesianDistance","p1","p2","distance","pow","sqrt","name","id","uuidV4","type","colors","activeTabContext","activeTab","setActiveTab","ActiveTabContextProvider","useLoadImages","canvasRef","transparentPattern","setTransparentPattern","canvas","ctx","getContext","img","Image","src","onload","ptn","createPattern","rectArr","previewRef","_useContext","useContext","tab","setTab","direction","stops","gradient","selectedColor","screenWidth","PageTextContext","getStartingPoint","createGradient","percentList","percent","grad","replace","prev","drawLine","x","offsetX","target","HTMLCanvasElement","strokeStyle","lineWidth","fillStyle","clearRect","beginPath","globalAlpha","moveTo","fillRect","lineTo","stroke","closePath","drawRects","pushRect","rectWidth","obj","start","shapeArr","clear","removePrev","div","HTMLDivElement","classList","add","clearAll","clearCanvas","percents","backgroundImage","ref","canvasNotSupported","onClick","gradientPage","canvasButtonsText","toggle","circleArr","setStops","_useState3","center","_useState4","setCenter","circleRadius","y","origin","eq","drawCircles","arc","radius","fill","offsetY","lastRadius","save","restore","_center","cx","cy","shift","circle","pushCircle","floor","unshift","showPrev","tabCenter","tabStops","lastCoord","arcArr","index","first","last","calcPercent","startAngle","endAngle","atan2","abs","end","leftToDraw","toFixed","drawArcs","apply","pushArc","lastX","lastY","canvasCenter","_calcPercent","_calcPercent2","_calcPercent3","_calcPercent4","preview","image","_Fragment","transform","remove","nameLengthActive","isActive","addTab","setAddTab","setGradientTabs","stopPropagation","copy","_toConsumableArray","indexOf","filter","onMouseOver","changer","setColors","deleteColor","preventDefault","callback","changeColor","transparent","document","querySelector","li","HTMLLIElement","parent","parentElement","from","forEach","contains","colorListTitle","onContextMenu","backgroundColor","colorListAddText","onSubmit","setter","HTMLFormElement","input","HTMLInputElement","HiXMark","placeholder","form","HiCheck","modifiedBy","setType","gradTypeChanger","gradientTypeTitle","onChange","checked","gradientTypes","createdNewTab","gradientTabs","toggler","newTab","setNewTab","addTabText","namePlaceholder","ChangeGradType","ColorList","submit","transparentText","HTMLButtonElement","stopsText","directionText","BsArrowUp","ChangeColorStops","changeListener","yChanger","_prev$center","_ref2","centerText","htmlFor","copied","setCopied","innerText","setInnerText","list","colorMatches","matchAll","formatLinear","_step2","_iterator2","formatRadial","_step3","_iterator3","formatConic","React","navigator","clipboard","writeText","setTimeout","BsClipboardPlus","BsClipboardCheck","optionTitle","LinearCanvasOptions","RadialCanvasOptions","ConicCanvasOptions","GradgenClipboard","run","_useLocalStorage","useLocalStorage","_useLocalStorage2","colorList","querySelectorAll","matches","GradgenTab","HiPlus","ColorTransparent","OptionContainer","canvasCallToAction","LinearCanvas","RadialCanvas","ConicCanvas","AddTab","TextContent","textContent","GradgenBuilder"],"sourceRoot":""}