{"version":3,"file":"static/js/551.a2a31f92.chunk.js","mappings":"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","sources":["classes/ColorParser.ts","components/Frame/ContentExample/ContentExample.tsx","components/Frame/ContentBlock/ContentBlock.tsx","components/Frame/TextContent/TextContent.tsx","context/ScreenDimensionContext.tsx","hooks/useColorValidator.ts","hooks/useLocalStorage.ts","context/PalleteGenContext.tsx","classes/PalletePoints.ts","classes/DrawCanvas.ts","hooks/useDrawCanvas.ts","components/Frame/CloseBtn/CloseBtn.tsx","components/Frame/CopyBtn/CopyBtn.tsx","components/PalleteGen/PalleteColorList/PalleteColorList.tsx","components/PalleteGen/PalleteCSSCode/PalleteCSSCode.tsx","components/PalleteGen/PalleteGenPicker/PalleteGenPicker.tsx","components/PalleteGen/PalleteGenStyle/PalleteGenStyle.tsx","components/PalleteGen/PalleteGenColor/PalleteGenColor.tsx","components/PalleteGen/PalleteGenColorBar/PalleteGenColorBar.tsx","pages/PalleteGen/PalleteGen.tsx"],"sourcesContent":["interface Color {\r\n  id: string;\r\n  toString(): string;\r\n  clamp(num: number, min: number, max: number): number;\r\n}\r\n\r\ninterface RGBColor extends Color {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n  alpha: number;\r\n}\r\n\r\ninterface HEXColor extends RGBColor {}\r\n\r\ninterface HSLColor extends Color {\r\n  hue: number;\r\n  saturation: number;\r\n  lightness: number;\r\n  alpha: number;\r\n}\r\ninterface CMYKColor extends Color {\r\n  cyan: number;\r\n  magenta: number;\r\n  yellow: number;\r\n  black: number;\r\n  alpha: number;\r\n}\r\n\r\nclass Color implements Color {\r\n  clamp(num: number, min: number, max: number): number {\r\n    return Math.min(Math.max(num, min), max);\r\n  }\r\n  toString(): string {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nclass RGBColor extends Color implements RGBColor {\r\n  constructor(red: number, green: number, blue: number, alpha: number = 1) {\r\n    super();\r\n    this.red = this.clamp(red, 0, 255);\r\n    this.green = this.clamp(green, 0, 255);\r\n    this.blue = this.clamp(blue, 0, 255);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n  toString(): string {\r\n    const { red, green, blue, alpha } = this;\r\n    if (alpha !== 1) {\r\n      return `rgba(${red},${green},${blue},${alpha})`;\r\n    } else {\r\n      return `rgb(${red},${green},${blue})`;\r\n    }\r\n  }\r\n  get components(): number[] {\r\n    const { red, green, blue, alpha } = this;\r\n    return [red, green, blue, alpha];\r\n  }\r\n}\r\n\r\nclass HEXColor extends RGBColor implements HEXColor {\r\n  constructor(red: number, green: number, blue: number, alpha: number = 1) {\r\n    super(red, green, blue, alpha);\r\n  }\r\n  toString(): string {\r\n    const { red, green, blue, alpha } = this;\r\n\r\n    let hex = \"#\";\r\n    for (let i of [red, green, blue]) {\r\n      let parsed = i.toString(16);\r\n      if (parsed.length === 1) {\r\n        parsed = parsed.padStart(2, \"0\");\r\n      }\r\n      hex += parsed;\r\n    }\r\n\r\n    if (alpha && alpha !== 1) {\r\n      let parsed = parseInt((this.alpha * 255).toString()).toString(16);\r\n      if (parsed.length === 1) {\r\n        parsed = parsed.padStart(2, \"0\");\r\n      }\r\n      hex += parsed;\r\n    }\r\n\r\n    return hex;\r\n  }\r\n}\r\n\r\nclass HSLColor extends Color implements HSLColor {\r\n  constructor(\r\n    hue: number,\r\n    saturation: number,\r\n    lightness: number,\r\n    alpha: number = 1\r\n  ) {\r\n    super();\r\n    this.hue = this.clamp(hue, 0, 360);\r\n    this.saturation = this.clamp(saturation, 0, 100);\r\n    this.lightness = this.clamp(lightness, 0, 100);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n\r\n  toString(): string {\r\n    const { hue, saturation, lightness, alpha } = this;\r\n\r\n    if (alpha !== 1) {\r\n      return `hsla(${hue}deg,${saturation}%,${lightness}%,${parseInt(\r\n        (alpha * 100).toString()\r\n      )}%)`;\r\n    } else {\r\n      return `hsl(${hue}deg,${saturation}%,${lightness}%)`;\r\n    }\r\n  }\r\n\r\n  get components(): number[] {\r\n    const { hue, saturation, lightness, alpha } = this;\r\n    return [hue, saturation, lightness, alpha];\r\n  }\r\n}\r\n\r\nclass CMYKColor extends Color implements CMYKColor {\r\n  constructor(\r\n    cyan: number,\r\n    magenta: number,\r\n    yellow: number,\r\n    black: number,\r\n    alpha: number = 1\r\n  ) {\r\n    super();\r\n    this.cyan = this.clamp(cyan, 0, 100);\r\n    this.magenta = this.clamp(magenta, 0, 100);\r\n    this.yellow = this.clamp(yellow, 0, 100);\r\n    this.black = this.clamp(black, 0, 100);\r\n    this.alpha = this.clamp(alpha, 0, 1);\r\n  }\r\n  toString(): string {\r\n    const { cyan, magenta, yellow, black } = this;\r\n    return `cmyk(${cyan}%,${magenta}%,${yellow}%,${black}%)`;\r\n  }\r\n  get components(): number[] {\r\n    const { cyan, magenta, yellow, black, alpha } = this;\r\n    return [cyan, magenta, yellow, black, alpha];\r\n  }\r\n}\r\n\r\ninterface ColorParser {\r\n  color: HSLColor | RGBColor | HEXColor | CMYKColor;\r\n}\r\n\r\nexport interface ColorParserSchema extends ColorParser {}\r\n\r\nclass ColorParser implements ColorParser {\r\n  private invalidColorMessage: string =\r\n    \"InvalidColorError: Color must be expressed only in the following color formats: cmyk,rgba?,hex or hsla?\";\r\n\r\n  private validateHEX(color: string): boolean {\r\n    const resumedHEX = /^#[0-9a-fA-F]{3,4}$/;\r\n    const fullHEX = /^#[0-9a-fA-F]{6,8}$/;\r\n\r\n    if ([4, 5, 7, 9].includes(color.length)) {\r\n      return resumedHEX.test(color) || fullHEX.test(color);\r\n    }\r\n    return false;\r\n  }\r\n  private validateHSL(color: string): boolean {\r\n    // hsl(30deg,100%,50%);\r\n    // hsla(20deg,100%,50%,45%);\r\n\r\n    const onlyHSL = /^hsl\\((?:\\d{1,3}deg)(?:,\\d{1,3}%){2}\\)$/;\r\n    const onlyHSLA = /^hsla\\((?:\\d{1,3}deg)(?:,\\d{1,3}%){3}\\)$/;\r\n\r\n    return onlyHSL.test(color) || onlyHSLA.test(color);\r\n  }\r\n  private validateRGB(color: string): boolean {\r\n    // rgb(255,255,255);\r\n    // rgba(255,255,255,0.5);\r\n\r\n    const onlyRGB = /^rgb\\((?:\\d{1,3},?){3}\\)$/;\r\n    const onlyRGBA = /^rgba\\((?:\\d{1,3},){3}(?:[0-1]\\.\\d+)\\)$/;\r\n\r\n    return onlyRGB.test(color) || onlyRGBA.test(color);\r\n  }\r\n  private validateCMYK(color: string): boolean {\r\n    const regex = /^cmyk\\((?:\\d{1,3}%,?){4}\\)$/;\r\n\r\n    return regex.test(color);\r\n  }\r\n  static splitHSL(color: string): HSLColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [hue, saturation, lightness, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new HSLColor(hue, saturation, lightness, alpha);\r\n    } else {\r\n      return new HSLColor(hue, saturation, lightness);\r\n    }\r\n  }\r\n  static splitHEX(color: string): HEXColor {\r\n    color = color.slice(1);\r\n    const colorComponents = [];\r\n\r\n    if ([3, 4].includes(color.length)) {\r\n      let extended = \"\";\r\n      for (let i of color) {\r\n        extended += i.repeat(2);\r\n      }\r\n      color = extended;\r\n    }\r\n\r\n    for (let i = 0; i < color.length; i += 2) {\r\n      const component = color.slice(i, i + 2);\r\n      colorComponents.push(parseInt(component, 16));\r\n    }\r\n\r\n    let [red, green, blue, alpha] = colorComponents;\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      alpha /= 255;\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else {\r\n      return new HEXColor(red, green, blue);\r\n    }\r\n  }\r\n  static splitRGB(color: string): RGBColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [red, green, blue, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new RGBColor(red, green, blue, alpha);\r\n    } else {\r\n      return new RGBColor(red, green, blue);\r\n    }\r\n  }\r\n  static splitCMYK(color: string): CMYKColor {\r\n    const regex = /\\((.+)\\)/;\r\n    const match = color.match(regex) as RegExpMatchArray;\r\n\r\n    let [cyan, magenta, yellow, black, alpha] = match[1]\r\n      .split(\",\")\r\n      .map((item) => parseFloat(item));\r\n\r\n    alpha = isNaN(alpha) ? 0 : alpha / 100;\r\n\r\n    if (typeof alpha === \"number\") {\r\n      return new CMYKColor(cyan, magenta, yellow, black);\r\n    } else {\r\n      return new CMYKColor(cyan, magenta, yellow, black, alpha);\r\n    }\r\n  }\r\n\r\n  private hueToRGB(p: number, q: number, t: number): number {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2) return q;\r\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n  }\r\n\r\n  private HSLtoRGB(\r\n    hue: number,\r\n    saturation: number,\r\n    lightness: number\r\n  ): RGBColor {\r\n    let red: number = 0;\r\n    let green: number = 0;\r\n    let blue: number = 0;\r\n\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n\r\n    if (saturation === 0) {\r\n      red = green = blue = lightness;\r\n    } else {\r\n      let q =\r\n        lightness < 0.5\r\n          ? lightness * (1 + saturation)\r\n          : lightness + saturation - lightness * saturation;\r\n      let p = 2 * lightness - q;\r\n      red = this.hueToRGB(p, q, hue + 1 / 3);\r\n      green = this.hueToRGB(p, q, hue);\r\n      blue = this.hueToRGB(p, q, hue - 1 / 3);\r\n    }\r\n\r\n    red = Math.round(red * 255);\r\n    green = Math.round(green * 255);\r\n    blue = Math.round(blue * 255);\r\n\r\n    return new RGBColor(red, green, blue, this.color.alpha);\r\n  }\r\n  private RGBtoHSL(red: number, green: number, blue: number): HSLColor {\r\n    red /= 255;\r\n    green /= 255;\r\n    blue /= 255;\r\n\r\n    let max = Math.max(red, green, blue);\r\n    let min = Math.min(red, green, blue);\r\n\r\n    let h: number = (max + min) / 2;\r\n    let s: number = (max + min) / 2;\r\n    let l: number = (max + min) / 2;\r\n\r\n    if (max === min) {\r\n      h = s = 0; // achromatic\r\n    } else {\r\n      let d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      switch (max) {\r\n        case red:\r\n          h = (green - blue) / d + (green < blue ? 6 : 0);\r\n          break;\r\n        case green:\r\n          h = (blue - red) / d + 2;\r\n          break;\r\n        case blue:\r\n          h = (red - green) / d + 4;\r\n          break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    h = parseInt((h * 360).toString());\r\n    s = Math.round(s * 100);\r\n    l = Math.round(l * 100);\r\n\r\n    return new HSLColor(h, s, l, this.color.alpha);\r\n  }\r\n  private RGBtoCMYK(red: number, green: number, blue: number): CMYKColor {\r\n    let black = 1 - Math.max(red, green, blue) / 255;\r\n    let cyan = (1 - red / 255 - black) / (1 - black);\r\n    let magenta = (1 - green / 255 - black) / (1 - black);\r\n    let yellow = (1 - blue / 255 - black) / (1 - black);\r\n\r\n    cyan = isNaN(cyan) ? 0 : cyan;\r\n    magenta = isNaN(magenta) ? 0 : magenta;\r\n    yellow = isNaN(yellow) ? 0 : yellow;\r\n    black = isNaN(black) ? 0 : black;\r\n\r\n    cyan = Math.round(cyan * 100);\r\n    magenta = Math.round(magenta * 100);\r\n    yellow = Math.round(yellow * 100);\r\n    black = Math.round(black * 100);\r\n\r\n    return new CMYKColor(cyan, magenta, yellow, black, this.color.alpha);\r\n  }\r\n\r\n  private CMYKtoRGB(\r\n    cyan: number,\r\n    magenta: number,\r\n    yellow: number,\r\n    black: number\r\n  ): RGBColor {\r\n    let red = 255 * (1 - cyan / 100) * (1 - black / 100);\r\n    let green = 255 * (1 - magenta / 100) * (1 - black / 100);\r\n    let blue = 255 * (1 - yellow / 100) * (1 - black / 100);\r\n\r\n    return new RGBColor(red, green, blue, this.color.alpha);\r\n  }\r\n\r\n  constructor(color: string | RGBColor | CMYKColor | HSLColor | HEXColor) {\r\n    if (typeof color === \"string\") {\r\n      if (this.validateHEX(color)) {\r\n        this.color = ColorParser.splitHEX(color);\r\n      } else if (this.validateCMYK(color)) {\r\n        this.color = ColorParser.splitCMYK(color);\r\n      } else if (this.validateRGB(color)) {\r\n        this.color = ColorParser.splitRGB(color);\r\n      } else if (this.validateHSL(color)) {\r\n        this.color = ColorParser.splitHSL(color);\r\n      }\r\n    } else {\r\n      this.color = color;\r\n    }\r\n  }\r\n\r\n  get hsl(): HSLColor {\r\n    if (this.color instanceof HSLColor) {\r\n      return this.color;\r\n    } else if (\r\n      this.color instanceof RGBColor ||\r\n      this.color instanceof HEXColor\r\n    ) {\r\n      const { red, green, blue } = this.color;\r\n      return this.RGBtoHSL(red, green, blue);\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const { red, green, blue } = this.CMYKtoRGB(cyan, magenta, yellow, black);\r\n      return this.RGBtoHSL(red, green, blue);\r\n    }\r\n    return new HSLColor(0, 100, 50);\r\n  }\r\n\r\n  get rgb(): RGBColor {\r\n    if (this.color instanceof RGBColor) {\r\n      return this.color;\r\n    } else if (this.color instanceof HEXColor) {\r\n      const { red, green, blue, alpha } = this.color;\r\n      return new RGBColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof HSLColor) {\r\n      const { hue, saturation, lightness } = this.color;\r\n      const result = this.HSLtoRGB(hue, saturation, lightness);\r\n      return result;\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const result = this.CMYKtoRGB(cyan, magenta, yellow, black);\r\n      return result;\r\n    }\r\n    return new RGBColor(255, 255, 255, 0.5);\r\n  }\r\n\r\n  get hex(): HEXColor {\r\n    if (this.color instanceof HEXColor) {\r\n      return this.color;\r\n    } else if (this.color instanceof RGBColor) {\r\n      let { red, green, blue, alpha } = this.color;\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof HSLColor) {\r\n      let { hue, saturation, lightness } = this.color;\r\n      let { red, green, blue, alpha } = this.HSLtoRGB(\r\n        hue,\r\n        saturation,\r\n        lightness\r\n      );\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    } else if (this.color instanceof CMYKColor) {\r\n      const { cyan, magenta, yellow, black } = this.color;\r\n      const { red, green, blue, alpha } = this.CMYKtoRGB(\r\n        cyan,\r\n        magenta,\r\n        yellow,\r\n        black\r\n      );\r\n\r\n      return new HEXColor(red, green, blue, alpha);\r\n    }\r\n\r\n    return new HEXColor(255, 125, 255, 255);\r\n  }\r\n\r\n  get cmyk(): CMYKColor {\r\n    if (this.color instanceof CMYKColor) {\r\n      return this.color;\r\n    } else if (\r\n      this.color instanceof RGBColor ||\r\n      this.color instanceof HEXColor\r\n    ) {\r\n      const { red, green, blue } = this.color;\r\n      return this.RGBtoCMYK(red, green, blue);\r\n    } else if (this.color instanceof HSLColor) {\r\n      const { hue, saturation, lightness } = this.color;\r\n      const { red, green, blue } = this.HSLtoRGB(hue, saturation, lightness);\r\n      return this.RGBtoCMYK(red, green, blue);\r\n    }\r\n    return new CMYKColor(0, 0, 0, 100, 100);\r\n  }\r\n}\r\n\r\nexport default ColorParser;\r\n\r\nexport { RGBColor, HEXColor, HSLColor, CMYKColor };\r\n","import \"./ContentExample.scss\";\r\nimport ColorParser from \"classes/ColorParser\";\r\n\r\ntype Props = {\r\n  color: string;\r\n};\r\n\r\nfunction ContentExample({ color }: Props) {\r\n  return (\r\n    <div className=\"content__example\">\r\n      <div\r\n        className=\"example__preview\"\r\n        style={{\r\n          background: color.startsWith(\"cmyk\")\r\n            ? new ColorParser(color).rgb.toString()\r\n            : color,\r\n        }}\r\n      ></div>\r\n      <div className=\"example__text\">{color}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentExample;\r\n","import \"./ContentBlock.scss\";\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nimport ContentExample from \"components/Frame/ContentExample/ContentExample\";\r\nimport { Content } from \"data/PageText\";\r\n\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\ntype Props = {\r\n  data: Content;\r\n};\r\n\r\nfunction ContentBlock({ data }: Props) {\r\n  const contentRef = useRef<HTMLParagraphElement>(null);\r\n\r\n  const { title, main, prevs } = data;\r\n\r\n  useEffect(() => {\r\n    if (contentRef.current) {\r\n      const { current: element } = contentRef;\r\n\r\n      element.innerHTML = main;\r\n    }\r\n  }, [contentRef]);\r\n\r\n  return (\r\n    <div className=\"content__block\">\r\n      <ReactMarkdown>{`${title}\\n${main}`}</ReactMarkdown>\r\n      {prevs && prevs.map((item, i) => <ContentExample key={i} color={item} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentBlock;\r\n","import { PageTextContent } from \"data/PageText\";\r\nimport ContentBlock from \"components/Frame/ContentBlock/ContentBlock\";\r\n\r\nimport \"./TextContent.scss\";\r\n\r\ntype Props = {\r\n  data: PageTextContent;\r\n};\r\n\r\nfunction TextContent({ data }: Props) {\r\n  return (\r\n    <section className=\"text-content\">\r\n      <h3 className=\"content__section-title\">{data.contentTitle}</h3>\r\n\r\n      {data &&\r\n        data.items.map((item) => <ContentBlock data={item} key={item.main} />)}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TextContent;\r\n","import { createContext, useEffect, useState } from \"react\";\r\n\r\ninterface ScreenDimensions {\r\n  width: number;\r\n  height: number;\r\n  readonly xsm: 0;\r\n  readonly sm: 576;\r\n  readonly md: 768;\r\n  readonly lg: 992;\r\n  readonly xlg: 1200;\r\n}\r\n\r\ninterface Context<T> {\r\n  data: T;\r\n  setData: React.Dispatch<React.SetStateAction<T>> | (() => {});\r\n}\r\n\r\nconst defaultData: ScreenDimensions = {\r\n  width: window.screen.availWidth,\r\n  height: window.screen.availHeight,\r\n  xsm: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xlg: 1200,\r\n};\r\n\r\nexport const ScreenDimensionContext = createContext<Context<ScreenDimensions>>({\r\n  data: defaultData,\r\n  setData: () => {},\r\n});\r\n\r\nfunction ScreenDimensionContextProvider({ children }: any) {\r\n  const [data, setData] = useState<ScreenDimensions>(defaultData);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setData({\r\n        ...data,\r\n        width: window.screen.availWidth,\r\n        height: window.screen.availHeight,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ScreenDimensionContext.Provider value={{ data, setData }}>\r\n      {children}\r\n    </ScreenDimensionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ScreenDimensionContextProvider;\r\n","\r\nexport function useColorValidator() {\r\n\r\n  function validatePercent(...values: string[]): boolean {\r\n    // Validate Percent Values\r\n    let percentExp = /^\\d{0,3}\\.?\\d*%$/;\r\n\r\n    for (let i of values) {\r\n      if (percentExp.test(i)) {\r\n        let j = parseFloat(i.replace(\"%\", \"\")).toFixed(2);\r\n        if (!(parseFloat(j) >= 0 && parseFloat(j) <= 100)) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  function validateRGB(text: string): boolean {\r\n    // Validate RGB Color Strings\r\n\r\n    const reg: RegExp = /^rgba?\\(.+\\)$/i;\r\n    const regAlpha = /,\\.\\d+\\]$/g;\r\n\r\n    if (reg.test(text)) {\r\n\r\n      text = text\r\n        .replace(/^rgba?/i, \"\")\r\n        .replace(\"(\", \"[\")\r\n        .replace(\")\", \"]\")\r\n\r\n      try {\r\n\r\n        let match = text.match(regAlpha);\r\n\r\n        if (match) {\r\n\r\n          let x = match[0].replace(\".\", \"0.\");\r\n          text = text.replace(regAlpha, x);\r\n        }\r\n\r\n        const parse: number[] = JSON.parse(text);\r\n\r\n        if (parse.length !== 3 && parse.length !== 4) {\r\n          return false;\r\n        }\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n          if (!(parse[i] >= 0 && parse[i] <= 255)) {\r\n            return false\r\n          }\r\n        }\r\n\r\n        if (parse.length === 4) {\r\n          if (!(parse[3] <= 1 && parse[3] >= 0)) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        return true;\r\n\r\n      } catch {\r\n        return false\r\n      }\r\n    } else {\r\n      return false\r\n    }\r\n\r\n  }\r\n\r\n  function validateHEX(text: string): boolean {\r\n    // Validdate Hex Color Strings\r\n\r\n    const reg = /#[0-9a-fA-F]{3,6}/;\r\n\r\n    if (reg.test(text)) {\r\n      return true;\r\n    }\r\n    return false\r\n  }\r\n\r\n  function validateHSL(text: string): boolean {\r\n    // Validate HSL Color Strings\r\n\r\n    const reg = /^hsla?\\(.+\\)$/i;\r\n\r\n    function validateHue(hue: string): boolean {\r\n\r\n      const reg1 = /rad$/;\r\n      const reg2 = /turn$/;\r\n      const reg3 = /deg$/;\r\n\r\n      if (reg1.test(hue)) {\r\n        let n = parseFloat(hue.replace(\"rad\", \"\"));\r\n        if (n >= -6.28 && n <= 6.28) {\r\n          return true;\r\n        }\r\n      } else if (reg2.test(hue)) {\r\n        let n = parseFloat(hue.replace(\"turn\", \"\"));\r\n        if (n >= -1 && n <= 1) {\r\n          return true\r\n        }\r\n      } else if (reg3.test(hue)) {\r\n        let n = parseFloat(hue.replace(\"deg\", \"\"));\r\n        if (n >= -360 && n <= 360) {\r\n          return true;\r\n        }\r\n      };\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    if (reg.test(text)) {\r\n      text = text\r\n        .replace(/^hsla?/i, \"\")\r\n        .replace(\"(\", \"\")\r\n        .replace(\")\", \"\");\r\n\r\n      try {\r\n        let parse = text.split(\",\");\r\n\r\n        if (!validateHue(parse[0])) {\r\n          return false;\r\n        }\r\n\r\n        parse.shift();\r\n\r\n        if (!(validatePercent(...parse))) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      } catch {\r\n        return false;\r\n      }\r\n\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  }\r\n\r\n  function validateCMYK(text: string): boolean {\r\n    // Validate CMYK color codes\r\n\r\n    const reg = /^cmyk\\(.+\\)$/i;\r\n\r\n    if (reg.test(text)) {\r\n      text = text\r\n        .replace(/cmyk/i, \"\")\r\n        .replace(\"(\", \"\")\r\n        .replace(\")\", \"\")\r\n\r\n      try {\r\n        let parse = text.split(\",\");\r\n\r\n        if (!(validatePercent(...parse))) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n\r\n      } catch {\r\n        return false;\r\n\r\n      }\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  return {\r\n    validateRGB,\r\n    validateHEX,\r\n    validateHSL,\r\n    validateCMYK\r\n  }\r\n\r\n}","import { useState, useEffect } from \"react\";\r\n\r\ntype State<T> = [T, React.Dispatch<React.SetStateAction<T>>];\r\n\r\nfunction useLocalStorage<T>(key: string, defaultValue: T): State<T> {\r\n  const [state, setState] = useState<T>(() => {\r\n    const parsed = localStorage.getItem(key);\r\n    if (parsed) {\r\n      return JSON.parse(parsed);\r\n    } else {\r\n      localStorage.setItem(key, JSON.stringify(defaultValue));\r\n      return defaultValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const parsed = JSON.stringify(state);\r\n    localStorage.setItem(key, parsed);\r\n  }, [state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import { createContext, useState } from \"react\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport { DrawCanvasSchema } from \"../classes/DrawCanvas\";\r\n\r\nimport { Coord } from \"../Types/GlobalTypes\";\r\n\r\nexport type palleteType =\r\n  | \"analog\"\r\n  | \"monocromatic\"\r\n  | \"triple\"\r\n  | \"square\"\r\n  | \"composed\"\r\n  | \"complementar\"\r\n  | \"slash-complementar\"\r\n  | \"double-slash-complementar\";\r\n\r\nexport interface ColorCoord {\r\n  id: string;\r\n  coord: Coord;\r\n  color: string;\r\n}\r\n\r\nexport interface PalleteGen {\r\n  mainColor: ColorCoord;\r\n  secondaryColors: Array<ColorCoord>;\r\n  type: palleteType;\r\n  canvasOBJ?: DrawCanvasSchema;\r\n  saturationGrad: boolean;\r\n}\r\n\r\nconst defaultValue: PalleteGen = {\r\n  mainColor: { color: \"#ff0000\", coord: [150, 0], id: uuidV4() },\r\n  secondaryColors: [{ color: \"#ff0000\", coord: [150, 0], id: uuidV4() }],\r\n  type: \"analog\",\r\n  saturationGrad: true,\r\n};\r\n\r\ninterface PalleteGenContext {\r\n  pallete: PalleteGen;\r\n  setPallete: Function;\r\n}\r\n\r\nexport const palleteGenContext = createContext<PalleteGenContext>({\r\n  pallete: defaultValue,\r\n  setPallete: () => {},\r\n});\r\n\r\nexport function PalleteGenContextProvider({ children }: any) {\r\n  const [pallete, setPallete] = useState<PalleteGen>(defaultValue);\r\n\r\n  return (\r\n    <palleteGenContext.Provider value={{ pallete, setPallete }}>\r\n      {children}\r\n    </palleteGenContext.Provider>\r\n  );\r\n}\r\n","import { palleteType, ColorCoord } from \"context/PalleteGenContext\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport DrawCanvas from \"./DrawCanvas\";\r\n\r\nimport { Coord } from \"../Types/GlobalTypes\";\r\n\r\ninterface PalletePoints {\r\n  canvas: HTMLCanvasElement;\r\n  center: Coord;\r\n  canvasOBJ: DrawCanvas;\r\n  mainPoint: Coord;\r\n  saturation: boolean;\r\n  palleteType: palleteType;\r\n  colors: string[];\r\n  findPointColor(coord: Coord): string;\r\n  findColorPoint(hue: number, secondValue: number): Coord;\r\n  parser(): Array<Coord>;\r\n}\r\n\r\nexport interface PalletePointsSchema extends PalletePoints {}\r\n\r\nclass PalletePoints implements PalletePoints {\r\n  static cartesianDistance(p1: Coord, p2: Coord) {\r\n    return Math.sqrt((p2[0] - p1[0]) ** 2 + (p2[1] - p1[1]) ** 2);\r\n  }\r\n  static degToRad(deg: number) {\r\n    return (Math.PI / 180) * deg;\r\n  }\r\n\r\n  static findPointColor(coord: Coord, ctx: CanvasRenderingContext2D): string {\r\n    const color = ctx.getImageData(coord[0], coord[1], 1, 1).data.slice(0, 3);\r\n    let hex = \"#\";\r\n    for (let i of color) {\r\n      let parsed = i.toString(16);\r\n      if (parsed.length === 1) {\r\n        parsed = parsed.padStart(2, \"0\");\r\n      }\r\n      hex += parsed;\r\n    }\r\n\r\n    return hex;\r\n  }\r\n  static findColorPoint(\r\n    hue: number,\r\n    secondValue: number,\r\n    center: Coord\r\n  ): Coord {\r\n    const angle = 0.5 * Math.PI + PalletePoints.degToRad(hue);\r\n    const dist = (secondValue / 100) * center[0];\r\n\r\n    const x = center[0] - Math.cos(angle) * dist;\r\n    const y = center[1] - Math.sin(angle) * dist;\r\n    return [x, y];\r\n  }\r\n  constructor(\r\n    canvasOBJ: DrawCanvas,\r\n    mainPoint: Coord,\r\n    palleteType: palleteType,\r\n    saturation: boolean\r\n  ) {\r\n    this.canvasOBJ = canvasOBJ;\r\n    this.canvasOBJ.drawOnlyWheel();\r\n    this.canvas = canvasOBJ.canvas;\r\n    this.center = [this.canvas.width / 2, this.canvas.height / 2];\r\n    this.mainPoint = mainPoint;\r\n    this.palleteType = palleteType;\r\n    this.colors = this.points.map((point: Coord) =>\r\n      PalletePoints.findPointColor(point, this.context)\r\n    );\r\n    this.saturation = saturation;\r\n  }\r\n\r\n  get points() {\r\n    return this.parser();\r\n  }\r\n\r\n  get context(): CanvasRenderingContext2D {\r\n    return this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  }\r\n\r\n  get canvasWidth(): number {\r\n    return this.canvas.width;\r\n  }\r\n  get canvasHeight(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  get secondaryColors(): ColorCoord[] {\r\n    return this.points.map((item: Coord): ColorCoord => {\r\n      return {\r\n        id: uuidV4(),\r\n        color: PalletePoints.findPointColor(item, this.context),\r\n        coord: item,\r\n      };\r\n    });\r\n  }\r\n\r\n  get distance(): number {\r\n    return PalletePoints.cartesianDistance(this.center, this.mainPoint);\r\n  }\r\n  get angle(): number {\r\n    return Math.atan2(\r\n      this.center[1] - this.mainPoint[1],\r\n      this.center[0] - this.mainPoint[0]\r\n    );\r\n  }\r\n\r\n  get analog(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    for (let i = -30; i <= 30; i += 15) {\r\n      if (!i) {\r\n        continue;\r\n      }\r\n      const sin = Math.sin(this.angle + PalletePoints.degToRad(i));\r\n      const cos = Math.cos(this.angle + PalletePoints.degToRad(i));\r\n\r\n      const x = this.center[0] - cos * this.distance;\r\n      const y = this.center[0] - sin * this.distance;\r\n\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n\r\n    return secondaryPoints;\r\n  }\r\n\r\n  get monocramatic(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    for (let i = 1; i <= 4; i++) {\r\n      const sin = Math.sin(this.angle);\r\n      const cos = Math.cos(this.angle);\r\n      const x = this.center[0] - ((cos * this.distance) / 5) * i;\r\n      const y = this.center[1] - ((sin * this.distance) / 5) * i;\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n    return secondaryPoints;\r\n  }\r\n\r\n  get triple(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    const multipliers = [1, 2 / 3, 1, 2 / 3];\r\n    for (let i = 0; i < multipliers.length; i++) {\r\n      let invert = i > 1 ? -1 : 1;\r\n\r\n      const sin =\r\n        Math.sin(this.angle + PalletePoints.degToRad(60) * invert) * -1;\r\n      const cos =\r\n        Math.cos(this.angle + PalletePoints.degToRad(60) * invert) * -1;\r\n      const x = this.center[0] - cos * this.distance * multipliers[i];\r\n      const y = this.center[1] - sin * this.distance * multipliers[i];\r\n\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n\r\n    return secondaryPoints;\r\n  }\r\n  get square(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    const sin1 = Math.sin(this.angle) * -1;\r\n    const cos1 = Math.cos(this.angle) * -1;\r\n\r\n    const sin2 = Math.sin(this.angle + PalletePoints.degToRad(90)) * -1;\r\n    const cos2 = Math.cos(this.angle + PalletePoints.degToRad(90)) * -1;\r\n\r\n    const sin3 = Math.sin(this.angle - PalletePoints.degToRad(90)) * -1;\r\n    const cos3 = Math.cos(this.angle - PalletePoints.degToRad(90)) * -1;\r\n\r\n    const sin4 = Math.sin(this.angle) * -1;\r\n    const cos4 = Math.cos(this.angle) * -1;\r\n\r\n    const angleArr = [\r\n      [cos1, sin1, 1],\r\n      [cos2, sin2, 1],\r\n      [cos3, sin3, 1],\r\n      [cos4, sin4, 2 / 3],\r\n    ];\r\n\r\n    for (let [cos, sin, multiplier] of angleArr) {\r\n      const x = this.center[0] - cos * this.distance * multiplier;\r\n      const y = this.center[1] - sin * this.distance * multiplier;\r\n\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n\r\n    return secondaryPoints;\r\n  }\r\n  get composed(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    const sin1 = Math.sin(this.angle + PalletePoints.degToRad(15)) * -1;\r\n    const cos1 = Math.cos(this.angle + PalletePoints.degToRad(15)) * -1;\r\n\r\n    const x1 = this.center[0] - cos1 * this.distance;\r\n    const y1 = this.center[1] - sin1 * this.distance;\r\n\r\n    const sin2 = Math.sin(this.angle - PalletePoints.degToRad(15));\r\n    const cos2 = Math.cos(this.angle - PalletePoints.degToRad(15));\r\n\r\n    const x2 = this.center[0] - cos2 * this.distance;\r\n    const y2 = this.center[1] - sin2 * this.distance;\r\n\r\n    const sin3 = Math.sin(this.angle + PalletePoints.degToRad(45)) * -1;\r\n    const cos3 = Math.cos(this.angle + PalletePoints.degToRad(45)) * -1;\r\n\r\n    const x3 = this.center[0] - cos3 * this.distance;\r\n    const y3 = this.center[1] - sin3 * this.distance;\r\n\r\n    const sin4 = Math.sin(this.angle - PalletePoints.degToRad(45));\r\n    const cos4 = Math.cos(this.angle - PalletePoints.degToRad(45));\r\n\r\n    const x4 = this.center[0] - cos4 * this.distance;\r\n    const y4 = this.center[1] - sin4 * this.distance;\r\n\r\n    secondaryPoints.push([x1, y1], [x2, y2], [x3, y3], [x4, y4]);\r\n\r\n    return secondaryPoints;\r\n  }\r\n  get complementar(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    for (let i = 1; i <= 4; i++) {\r\n      const sin = Math.sin(this.angle) * -1;\r\n      const cos = Math.cos(this.angle) * -1;\r\n      const x = this.center[0] - ((cos * this.distance) / 5) * i;\r\n      const y = this.center[1] - ((sin * this.distance) / 5) * i;\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n    return secondaryPoints;\r\n  }\r\n  get slashComplementar(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      const multiplier = i > 1 ? 2 / 3 : 1;\r\n      const invert = i % 2 === 0 ? 1 : -1;\r\n\r\n      const sin =\r\n        Math.sin(this.angle + PalletePoints.degToRad(30) * invert) * -1;\r\n      const cos =\r\n        Math.cos(this.angle + PalletePoints.degToRad(30) * invert) * -1;\r\n\r\n      const x = this.center[0] - cos * this.distance * multiplier;\r\n      const y = this.center[0] - sin * this.distance * multiplier;\r\n      secondaryPoints.push([x, y]);\r\n    }\r\n\r\n    return secondaryPoints;\r\n  }\r\n  get doubleSlashComplementar(): Coord[] {\r\n    const secondaryPoints: Array<Coord> = [];\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let invert = i > 1 ? 1 : -1;\r\n      let angle = i % 2 === 0 ? 180 : 0;\r\n\r\n      const sin1 =\r\n        Math.sin(this.angle + PalletePoints.degToRad(30 + angle) * invert) * -1;\r\n      const cos1 =\r\n        Math.cos(this.angle + PalletePoints.degToRad(30 + angle) * invert) * -1;\r\n      const x1 = this.center[0] - cos1 * this.distance;\r\n      const y1 = this.center[1] - sin1 * this.distance;\r\n      secondaryPoints.push([x1, y1]);\r\n    }\r\n\r\n    return secondaryPoints;\r\n  }\r\n\r\n  parser(): Coord[] {\r\n    switch (this.palleteType) {\r\n      case \"analog\":\r\n        return this.analog;\r\n      case \"monocromatic\":\r\n        return this.monocramatic;\r\n      case \"triple\":\r\n        return this.triple;\r\n      case \"square\":\r\n        return this.square;\r\n      case \"composed\":\r\n        return this.composed;\r\n      case \"complementar\":\r\n        return this.complementar;\r\n      case \"slash-complementar\":\r\n        return this.slashComplementar;\r\n      case \"double-slash-complementar\":\r\n        return this.doubleSlashComplementar;\r\n    }\r\n  }\r\n\r\n  changeMainPoint(newValue: Coord) {\r\n    const [x, y] = newValue;\r\n    if (x >= 0 && x <= this.canvasWidth && y >= 0 && y <= this.canvasHeight) {\r\n      this.mainPoint = newValue;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PalletePoints;\r\n","import { palleteType, ColorCoord } from \"../context/PalleteGenContext\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport PalletePoints from \"./PalletePoints\";\r\n\r\nimport { Coord } from \"../Types/GlobalTypes\";\r\n\r\ninterface DrawCanvas {\r\n  id: string;\r\n  canvas: HTMLCanvasElement;\r\n  center: Coord;\r\n  drawWidth: number;\r\n  circleRadius: number;\r\n  mainPoint: Coord;\r\n  palleteType: palleteType;\r\n  setMainColor: React.Dispatch<React.SetStateAction<ColorCoord>>;\r\n  setSecondaryColors: React.Dispatch<React.SetStateAction<ColorCoord[]>>;\r\n  saturation: boolean;\r\n  drawColorWheel(): void;\r\n  drawOnlyWheel(): void;\r\n  drawMainPoint(point: Coord): void;\r\n  drawSecondaryPoints(points: Array<Coord>): void;\r\n  clearCanvas(): void;\r\n  drawBasedOnEvent(e: MouseEvent): void;\r\n  addEvents(): void;\r\n}\r\n\r\nexport interface DrawCanvasSchema extends DrawCanvas {}\r\n\r\nclass DrawCanvas implements DrawCanvas {\r\n  private distance(p1: Coord, p2: Coord): number {\r\n    const d = (p2[1] - p1[1]) ** 2 + (p2[0] - p1[0]) ** 2;\r\n    return Math.sqrt(d);\r\n  }\r\n  constructor(\r\n    canvas: HTMLCanvasElement,\r\n    drawWidth: number,\r\n    palleteType: palleteType,\r\n    setMainColor: React.Dispatch<React.SetStateAction<ColorCoord>>,\r\n    setSecondaryColors: React.Dispatch<React.SetStateAction<ColorCoord[]>>\r\n  ) {\r\n    this.id = uuidV4();\r\n    this.canvas = canvas;\r\n    this.center = [this.width / 2, this.height / 2];\r\n    this.drawWidth = drawWidth;\r\n    this.circleRadius = this.drawWidth * 1.5;\r\n    this.palleteType = palleteType;\r\n    this.setMainColor = setMainColor;\r\n    this.setSecondaryColors = setSecondaryColors;\r\n    this.saturation = true;\r\n    this.drawColorWheel();\r\n    this.addEvents();\r\n    this.mainPoint = this.center;\r\n  }\r\n\r\n  get width(): number {\r\n    return this.canvas.width;\r\n  }\r\n  get height(): number {\r\n    return this.canvas.height;\r\n  }\r\n\r\n  get context(): CanvasRenderingContext2D {\r\n    return this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n  }\r\n\r\n  clearCanvas(): void {\r\n    this.context.clearRect(0, 0, this.width, this.height);\r\n  }\r\n\r\n  private saturationGradient(): CanvasGradient {\r\n    const satGradient = this.context.createRadialGradient(\r\n      ...this.center,\r\n      0,\r\n      ...this.center,\r\n      this.center[0]\r\n    );\r\n    satGradient.addColorStop(1, \"#80808000\");\r\n    satGradient.addColorStop(0, \"#808080ff\");\r\n\r\n    return satGradient;\r\n  }\r\n\r\n  private lightnessGradient(): CanvasGradient {\r\n    const lumGradient = this.context.createRadialGradient(\r\n      ...this.center,\r\n      0,\r\n      ...this.center,\r\n      this.center[0]\r\n    );\r\n\r\n    for (let i = 0; i <= 0.5; i += 0.5) {\r\n      let fillColor = `rgba(255,255,255,${1 - i * 2})`;\r\n      lumGradient.addColorStop(i, fillColor);\r\n    }\r\n\r\n    for (let i = 0; i <= 10; i++) {\r\n      let offset = 0.5 + 0.05 * i;\r\n      let fillColor = `rgba(0,0,0,${i / 10}`;\r\n      lumGradient.addColorStop(offset, fillColor);\r\n    }\r\n\r\n    return lumGradient;\r\n  }\r\n\r\n  drawColorWheel(): void {\r\n    this.clearCanvas();\r\n\r\n    const colorGradient = this.context.createConicGradient(\r\n      1.5 * Math.PI,\r\n      ...this.center\r\n    );\r\n\r\n    colorGradient.addColorStop(1 / 7, \"#ff0000\");\r\n    colorGradient.addColorStop((1 / 7) * 2, \"#ffff00\");\r\n    colorGradient.addColorStop((1 / 7) * 3, \"#00ff00\");\r\n    colorGradient.addColorStop((1 / 7) * 4, \"#00ffff\");\r\n    colorGradient.addColorStop((1 / 7) * 5, \"#0000ff\");\r\n    colorGradient.addColorStop((1 / 7) * 6, \"#ff00ff\");\r\n    colorGradient.addColorStop(1, \"#ff0000\");\r\n\r\n    this.context.fillStyle = colorGradient;\r\n    this.context.beginPath();\r\n\r\n    this.context.fillRect(0, 0, this.width, this.height);\r\n    this.context.closePath();\r\n    this.context.fillStyle = this.saturation\r\n      ? this.saturationGradient()\r\n      : this.lightnessGradient();\r\n    this.context.beginPath();\r\n    this.context.fillRect(0, 0, this.width, this.height);\r\n    this.context.closePath();\r\n  }\r\n\r\n  drawMainPoint(point: Coord): void {\r\n    const [x, y] = point;\r\n    this.clearCanvas();\r\n    this.drawColorWheel();\r\n\r\n    const distance = this.distance(this.center, point);\r\n    const tan = Math.atan2(this.center[1] - y, this.center[0] - x);\r\n\r\n    let x1 = this.center[0] - Math.cos(tan) * (distance - this.circleRadius);\r\n    let y1 = this.center[1] - Math.sin(tan) * (distance - this.circleRadius);\r\n\r\n    this.context.strokeStyle = \"#000\";\r\n    this.context.fillStyle = \"#000\";\r\n    this.context.lineWidth = this.drawWidth;\r\n\r\n    this.context.beginPath();\r\n    this.context.moveTo(...this.center);\r\n    this.context.lineTo(x1, y1);\r\n    this.context.closePath();\r\n    this.context.stroke();\r\n    this.context.beginPath();\r\n    this.context.arc(x, y, this.circleRadius, 0, 2 * Math.PI);\r\n    this.context.stroke();\r\n    this.context.closePath();\r\n    // this.context.fill();\r\n  }\r\n\r\n  drawSecondaryPoints(points: Coord[]): void {\r\n    this.context.fillStyle = \"#fff\";\r\n    this.context.strokeStyle = \"#fff\";\r\n    for (let point of points) {\r\n      const tan = Math.atan2(\r\n        this.center[1] - point[1],\r\n        this.center[0] - point[0]\r\n      );\r\n\r\n      const distance = this.distance(this.center, point);\r\n      const x1 =\r\n        this.center[0] - Math.cos(tan) * (distance - this.circleRadius);\r\n      const y1 =\r\n        this.center[1] - Math.sin(tan) * (distance - this.circleRadius);\r\n\r\n      this.context.beginPath();\r\n      this.context.moveTo(...this.center);\r\n      this.context.lineTo(x1, y1);\r\n      this.context.stroke();\r\n      this.context.closePath();\r\n\r\n      this.context.beginPath();\r\n      this.context.arc(...point, this.circleRadius, 0, 2 * Math.PI);\r\n      this.context.stroke();\r\n      this.context.closePath();\r\n    }\r\n  }\r\n\r\n  drawManager(point: Coord, points: Array<Coord>): void {\r\n    this.clearCanvas();\r\n    this.drawColorWheel();\r\n    this.drawMainPoint(point);\r\n    this.drawSecondaryPoints(points);\r\n  }\r\n\r\n  drawBasedOnEvent(e: MouseEvent): void {\r\n    const { offsetX: x, offsetY: y } = e;\r\n    const mainPoint: Coord = [x, y];\r\n\r\n    this.drawOnlyWheel();\r\n\r\n    const manager = new PalletePoints(\r\n      this,\r\n      mainPoint,\r\n      this.palleteType,\r\n      this.saturation\r\n    );\r\n\r\n    const secondaryPoints = manager.parser();\r\n\r\n    this.setMainColor({\r\n      id: uuidV4(),\r\n      color: PalletePoints.findPointColor(mainPoint, this.context),\r\n      coord: [x, y],\r\n    });\r\n    this.setSecondaryColors(manager.secondaryColors);\r\n\r\n    this.drawMainPoint(mainPoint);\r\n    this.drawSecondaryPoints(secondaryPoints);\r\n  }\r\n  addEvents() {\r\n    const { canvas } = this;\r\n    const drawCallback = (e: MouseEvent) => this.drawBasedOnEvent(e);\r\n    const removeCallback = () =>\r\n      canvas.removeEventListener(\"mousemove\", drawCallback);\r\n\r\n    canvas.addEventListener(\"mousedown\", (e) => {\r\n      drawCallback(e);\r\n      canvas.addEventListener(\"mousemove\", drawCallback);\r\n    });\r\n\r\n    canvas.addEventListener(\"mouseout\", removeCallback);\r\n    canvas.addEventListener(\"mouseup\", removeCallback);\r\n  }\r\n  drawOnlyWheel(): void {\r\n    this.clearCanvas();\r\n    this.drawColorWheel();\r\n  }\r\n}\r\n\r\nexport default DrawCanvas;\r\n","import {\r\n  ColorCoord,\r\n  PalleteGen,\r\n  palleteGenContext,\r\n} from \"context/PalleteGenContext\";\r\nimport { RefObject, useContext, useEffect, useState } from \"react\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport DrawCanvas from \"classes/DrawCanvas\";\r\n\r\nfunction useDrawCanvas(\r\n  canvasRef: RefObject<HTMLCanvasElement>,\r\n  drawWidth: number\r\n) {\r\n  const [drawObj, setDrawObj] = useState<DrawCanvas>();\r\n  const [mainColor, setMainColor] = useState<ColorCoord>({\r\n    color: \"#ff0000\",\r\n    id: uuidV4(),\r\n    coord: [150, 0],\r\n  });\r\n  const [secondaryColors, setSecondaryColors] = useState<ColorCoord[]>([]);\r\n\r\n  const { pallete, setPallete } = useContext(palleteGenContext);\r\n\r\n  useEffect(() => {\r\n    const { current: canvas } = canvasRef;\r\n\r\n    if (canvas) {\r\n      setDrawObj(\r\n        new DrawCanvas(\r\n          canvas,\r\n          drawWidth,\r\n          pallete.type,\r\n          setMainColor,\r\n          setSecondaryColors\r\n        )\r\n      );\r\n    }\r\n    /* eslint-disable */\r\n  }, [canvasRef]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    setPallete((prev: PalleteGen): PalleteGen => {\r\n      return {\r\n        ...prev,\r\n        mainColor,\r\n        secondaryColors,\r\n      };\r\n    });\r\n    /* eslint-disable */\r\n  }, [mainColor, secondaryColors]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    if (pallete.type && drawObj) {\r\n      drawObj.palleteType = pallete.type;\r\n      drawObj.saturation = pallete.saturationGrad;\r\n      drawObj.drawColorWheel();\r\n    }\r\n    /* eslint-disable */\r\n  }, [pallete.type, pallete.saturationGrad]);\r\n  /* eslint-enable */\r\n\r\n  return { drawObj: drawObj as DrawCanvas };\r\n}\r\n\r\nexport default useDrawCanvas;\r\n","import React from \"react\";\r\n\r\nimport \"./CloseBtn.scss\";\r\n\r\ntype Props = {\r\n  toggler: Function;\r\n};\r\n\r\nfunction CloseBtn({ toggler }: Props) {\r\n  return (\r\n    <button className=\"close-btn\" onClick={() => toggler(false)}>\r\n      X\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CloseBtn;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BsClipboardCheck, BsClipboardPlus } from \"react-icons/bs\";\r\n\r\nimport \"./CopyBtn.scss\";\r\n\r\ntype Props = {\r\n  value: string;\r\n};\r\n\r\nfunction CopyBtn({ value }: Props) {\r\n  const [copied, setCopied] = useState<boolean>(false);\r\n\r\n  function handleCopy(): void {\r\n    navigator.clipboard.writeText(value).then(() => {\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <button className=\"copy-btn\" onClick={handleCopy}>\r\n      {!copied && <BsClipboardPlus className=\"copy-btn__standard\" />}\r\n      {copied && <BsClipboardCheck className=\"copy-btn__copied\" />}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default CopyBtn;\r\n","import { ColorBarContext } from \"context/ColorBarContext\";\r\nimport React, { useContext } from \"react\";\r\nimport CopyBtn from \"../../Frame/CopyBtn/CopyBtn\";\r\n\r\nimport \"./PalleteColorList.scss\";\r\n\r\nfunction PalleteColorList() {\r\n  const { colorBarData } = useContext(ColorBarContext);\r\n\r\n  return (\r\n    <div className=\"pallete-color-list\">\r\n      <div className=\"pallete-color-list__list\">\r\n        <div className=\"pallete-color-list__color\">\r\n          <div>\r\n            <div\r\n              className=\"preview\"\r\n              style={{ backgroundColor: colorBarData.mainColor.color }}\r\n            ></div>\r\n            <span>{colorBarData.mainColor.color}</span>\r\n          </div>\r\n          <CopyBtn value={colorBarData.mainColor.color} />\r\n        </div>\r\n        {colorBarData.secondaryColors &&\r\n          colorBarData.secondaryColors.length &&\r\n          colorBarData.secondaryColors.map(({ color }) => (\r\n            <div className=\"pallete-color-list__color\" key={color}>\r\n              <div>\r\n                <div\r\n                  className=\"preview\"\r\n                  style={{ backgroundColor: color }}\r\n                ></div>\r\n                <span>{color}</span>\r\n              </div>\r\n              <CopyBtn value={color} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PalleteColorList;\r\n","import { ColorBarContext } from \"context/ColorBarContext\";\r\nimport React, { useContext } from \"react\";\r\n\r\nimport \"./PalleteCSSCode.scss\";\r\n\r\n// @ts-ignore\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// @ts-ignore\r\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport CopyBtn from \"../../Frame/CopyBtn/CopyBtn\";\r\n\r\nfunction PalleteCSSCode() {\r\n  const { colorBarData: data } = useContext(ColorBarContext);\r\n\r\n  function otherColors() {\r\n    let list = data.secondaryColors.map(({ color }, index) => {\r\n      return `\\t--color-${index + 2}: ${color};${index < 3 ? \"\\n\" : \"\"}`;\r\n    });\r\n    return list.join(\"\");\r\n  }\r\n\r\n  const markdown = `:root {\\n\\t--main-color: ${\r\n    data.mainColor.color\r\n  };\\n${otherColors()}\\n}\r\n  `;\r\n  return (\r\n    <div className=\"pallete-css-code\">\r\n      <CopyBtn value={markdown} />\r\n      <SyntaxHighlighter\r\n        language=\"css\"\r\n        style={dark}\r\n        PreTag=\"div\"\r\n        children={markdown}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PalleteCSSCode;\r\n","import { PalleteGen, palleteGenContext } from \"context/PalleteGenContext\";\r\nimport { useRef, useEffect, useContext, useState } from \"react\";\r\n\r\nimport \"./PalleteGenPicker.scss\";\r\n\r\nimport useDrawCanvas from \"hooks/useDrawCanvas\";\r\nimport CloseBtn from \"../../Frame/CloseBtn/CloseBtn\";\r\nimport PalleteColorList from \"../PalleteColorList/PalleteColorList\";\r\nimport PalleteCSSCode from \"../PalleteCSSCode/PalleteCSSCode\";\r\nimport { ScreenDimensionContext } from \"context/ScreenDimensionContext\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\n\r\nconst drawWidth = 5;\r\nfunction PalleteGenPicker() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const { pallete, setPallete } = useContext(palleteGenContext);\r\n  const { drawObj } = useDrawCanvas(canvasRef, drawWidth);\r\n  const { data: screenWidth } = useContext(ScreenDimensionContext);\r\n  const { data } = useContext(PageTextContext);\r\n\r\n  const [cssCodeToggler, setCssCodeToggler] = useState<boolean>(false);\r\n  const [colorListToggler, setColorListToggler] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setPallete((prev: PalleteGen): PalleteGen => {\r\n      return {\r\n        ...prev,\r\n        canvasOBJ: drawObj,\r\n      };\r\n    });\r\n    /* eslint-disable */\r\n  }, [drawObj]);\r\n  /* eslint-enable */\r\n  return (\r\n    <div className=\"picker\">\r\n      {screenWidth.width < screenWidth.sm && (\r\n        <canvas\r\n          width=\"250\"\r\n          height=\"250\"\r\n          ref={canvasRef}\r\n          className=\"picker__picker\"\r\n        >\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n      {screenWidth.width >= screenWidth.sm && (\r\n        <canvas\r\n          width=\"300\"\r\n          height=\"300\"\r\n          ref={canvasRef}\r\n          className=\"picker__picker\"\r\n        >\r\n          <p>{data.canvasNotSupported}</p>\r\n        </canvas>\r\n      )}\r\n\r\n      {colorListToggler && (\r\n        <div className=\"picker-banner\">\r\n          <div className=\"picker-banner__header\">\r\n            <h3>{data.palletePage.colorListTitle}</h3>\r\n            <CloseBtn toggler={setColorListToggler} />\r\n          </div>\r\n          <PalleteColorList />\r\n        </div>\r\n      )}\r\n      {cssCodeToggler && (\r\n        <div className=\"picker-banner\">\r\n          <div className=\"picker-banner__header\">\r\n            <h3>{data.palletePage.cssCopyTitle}</h3>\r\n            <CloseBtn toggler={setCssCodeToggler} />\r\n          </div>\r\n          <PalleteCSSCode />\r\n        </div>\r\n      )}\r\n      <div className=\"picker-buttons\">\r\n        <button\r\n          onClick={() => {\r\n            setColorListToggler(!colorListToggler);\r\n            setCssCodeToggler(false);\r\n          }}\r\n          className=\"picker-buttons__btn\"\r\n        >\r\n          {data.palletePage.pickerButtons[0]}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setCssCodeToggler(!cssCodeToggler);\r\n            setColorListToggler(false);\r\n          }}\r\n          className=\"picker-buttons__btn\"\r\n        >\r\n          {data.palletePage.pickerButtons[1]}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            if (pallete.canvasOBJ) {\r\n              pallete.canvasOBJ.saturation = !pallete.saturationGrad;\r\n\r\n              setPallete((prev: PalleteGen): PalleteGen => {\r\n                return {\r\n                  ...prev,\r\n                  saturationGrad: !prev.saturationGrad,\r\n                };\r\n              });\r\n            }\r\n          }}\r\n          className=\"picker-buttons__btn\"\r\n        >\r\n          {pallete.saturationGrad\r\n            ? data.palletePage.pickerButtons[2][0]\r\n            : data.palletePage.pickerButtons[2][1]}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PalleteGenPicker;\r\n","import {\r\n  PalleteGen,\r\n  palleteType,\r\n  palleteGenContext,\r\n} from \"context/PalleteGenContext\";\r\nimport React, { ChangeEvent, useContext } from \"react\";\r\n\r\nimport \"./PalleteGenStyle.scss\";\r\nimport PalletePoints from \"classes/PalletePoints\";\r\nimport {\r\n  ColorBarContext,\r\n  ColorBarContextSchema,\r\n} from \"../../../context/ColorBarContext\";\r\n\r\nfunction PalleteGenStyle() {\r\n  const { pallete, setPallete } = useContext(palleteGenContext);\r\n  const { colorBarData, setColorBarData } = useContext(ColorBarContext);\r\n\r\n  function classManager(input: HTMLInputElement) {\r\n    const label = input.parentElement;\r\n    if (label) {\r\n      const form = label.parentElement;\r\n      if (form) {\r\n        const children = form.querySelectorAll(\".pallete-gen-form__input\");\r\n\r\n        if (children) {\r\n          children.forEach((label) => {\r\n            label.classList.remove(\"form-input--active\");\r\n          });\r\n        }\r\n        label.classList.add(\"form-input--active\");\r\n      }\r\n    }\r\n  }\r\n  function changePalleteType(e: ChangeEvent) {\r\n    const { target: input } = e;\r\n\r\n    if (input instanceof HTMLInputElement && pallete.canvasOBJ) {\r\n      const type = input.value as palleteType;\r\n\r\n      classManager(input);\r\n\r\n      pallete.canvasOBJ.drawOnlyWheel();\r\n\r\n      const { coord } = colorBarData.mainColor;\r\n      const finder = new PalletePoints(\r\n        pallete.canvasOBJ,\r\n        coord,\r\n        type,\r\n        pallete.saturationGrad\r\n      );\r\n\r\n      setPallete((prev: PalleteGen): PalleteGen => {\r\n        return {\r\n          ...prev,\r\n          mainColor: colorBarData.mainColor,\r\n          secondaryColors: finder.secondaryColors,\r\n          type,\r\n        };\r\n      });\r\n      setColorBarData((prev: ColorBarContextSchema): ColorBarContextSchema => {\r\n        return {\r\n          ...prev,\r\n          mainColor: colorBarData.mainColor,\r\n          secondaryColors: finder.secondaryColors,\r\n          palleteType: type,\r\n        };\r\n      });\r\n\r\n      pallete.canvasOBJ.drawManager(coord, finder.points);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"pallete-gen__style\">\r\n      <form className=\"pallete-gen-form\">\r\n        <label className=\"pallete-gen-form__input form-input--active\">\r\n          <span>A</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"analog\"\r\n            checked={colorBarData.palleteType === \"analog\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>M</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"monocromatic\"\r\n            checked={colorBarData.palleteType === \"monocromatic\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>T</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"triple\"\r\n            checked={colorBarData.palleteType === \"triple\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>S</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"square\"\r\n            checked={colorBarData.palleteType === \"square\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>K</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"composed\"\r\n            checked={colorBarData.palleteType === \"composed\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>C</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"complementar\"\r\n            checked={colorBarData.palleteType === \"complementar\" ? true : false}\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>Y</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"slash-complementar\"\r\n            checked={\r\n              colorBarData.palleteType === \"slash-complementar\" ? true : false\r\n            }\r\n          />\r\n        </label>\r\n        <label className=\"pallete-gen-form__input\">\r\n          <span>X</span>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"pallete-gen-style\"\r\n            onChange={changePalleteType}\r\n            value=\"double-slash-complementar\"\r\n            checked={\r\n              colorBarData.palleteType === \"double-slash-complementar\"\r\n                ? true\r\n                : false\r\n            }\r\n          />\r\n        </label>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PalleteGenStyle;\r\n","import \"./PalleteGenColor.scss\";\r\nimport { useState, useContext, useEffect, ChangeEvent } from \"react\";\r\nimport { ColorCoord, palleteGenContext } from \"context/PalleteGenContext\";\r\nimport { useColorValidator } from \"hooks/useColorValidator\";\r\nimport {\r\n  ColorBarContext,\r\n  ColorBarContextSchema,\r\n} from \"../../../context/ColorBarContext\";\r\nimport { v4 as uuidV4 } from \"uuid\";\r\nimport PalletePoints from \"classes/PalletePoints\";\r\nimport ColorParser, { HEXColor } from \"classes/ColorParser\";\r\n\r\ntype Props = {\r\n  initialColor: ColorCoord;\r\n  isMainColor: boolean;\r\n};\r\n\r\ninterface ColorComponents {\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n}\r\n\r\nfunction PalleteGenColor({ initialColor, isMainColor }: Props) {\r\n  const { colorBarData, setColorBarData } = useContext(ColorBarContext);\r\n  const { pallete } = useContext(palleteGenContext);\r\n  const [colorComponents, setColorComponents] = useState<ColorComponents>({\r\n    red: 255,\r\n    green: 0,\r\n    blue: 0,\r\n  });\r\n\r\n  const [color, setColor] = useState<string>(initialColor.color);\r\n  const [inputColor, setInputColor] = useState<string>(initialColor.color);\r\n\r\n  const { validateHEX } = useColorValidator();\r\n\r\n  function changeComponent(e: ChangeEvent) {\r\n    const { target: input } = e;\r\n    if (input instanceof HTMLInputElement) {\r\n      const value = parseInt(input.value);\r\n      let obj: ColorComponents = Object.assign({}, colorComponents);\r\n\r\n      switch (input.name) {\r\n        case \"red\":\r\n          obj = {\r\n            ...colorComponents,\r\n            red: value,\r\n          };\r\n          break;\r\n        case \"green\":\r\n          obj = {\r\n            ...colorComponents,\r\n            green: value,\r\n          };\r\n\r\n          break;\r\n        case \"blue\":\r\n          obj = {\r\n            ...colorComponents,\r\n            blue: value,\r\n          };\r\n\r\n          break;\r\n      }\r\n      const { red, green, blue } = obj;\r\n      const hex = new HEXColor(red, green, blue).toString();\r\n      if (hex !== color) {\r\n        setColor(hex);\r\n        setInputColor(hex);\r\n        setColorComponents(obj);\r\n      }\r\n    }\r\n  }\r\n\r\n  function changeMainColor() {\r\n    if (\r\n      !isMainColor &&\r\n      colorBarData.mainColor.color !== color &&\r\n      pallete.canvasOBJ\r\n    ) {\r\n      const { hue, saturation, lightness } = new ColorParser(color).hsl;\r\n      const coord = PalletePoints.findColorPoint(\r\n        hue,\r\n        pallete.saturationGrad ? saturation : lightness,\r\n        pallete.canvasOBJ.center\r\n      );\r\n      setColorBarData((prev: ColorBarContextSchema): ColorBarContextSchema => {\r\n        return {\r\n          ...prev,\r\n          mainColor: {\r\n            id: uuidV4(),\r\n            color,\r\n            coord,\r\n          },\r\n          modifiedBy: \"color\",\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  function changeInputColor(e: ChangeEvent) {\r\n    const { target: input } = e;\r\n    if (input instanceof HTMLInputElement) {\r\n      const { value } = input;\r\n\r\n      if (validateHEX(value) && value !== color) {\r\n        setColor(value);\r\n        const { red, green, blue } = ColorParser.splitHEX(value);\r\n\r\n        setColorComponents({ red, green, blue });\r\n      }\r\n      setInputColor(value);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const { red, green, blue } = ColorParser.splitHEX(initialColor.color);\r\n    setColor(initialColor.color);\r\n    setInputColor(initialColor.color);\r\n    setColorComponents({ red, green, blue });\r\n  }, [initialColor]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isMainColor &&\r\n      color !== initialColor.color &&\r\n      colorBarData.modifiedBy !== \"color\" &&\r\n      pallete.canvasOBJ\r\n    ) {\r\n      const { hue, saturation, lightness } = new ColorParser(color).hsl;\r\n\r\n      const coord = PalletePoints.findColorPoint(\r\n        hue,\r\n        pallete.saturationGrad ? saturation : lightness,\r\n        pallete.canvasOBJ.center\r\n      );\r\n      setColorBarData((prev: ColorBarContextSchema): ColorBarContextSchema => {\r\n        return {\r\n          ...prev,\r\n          mainColor: {\r\n            id: uuidV4(),\r\n            color,\r\n            coord,\r\n          },\r\n          modifiedBy: \"color\",\r\n        };\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [color]);\r\n  /* eslint-enable */\r\n\r\n  return (\r\n    <article className=\"pallete-gen-color\">\r\n      <div className=\"color__left\">\r\n        <div\r\n          className=\"color__preview\"\r\n          style={{\r\n            backgroundColor: validateHEX(color) ? color : \"#ff0000\",\r\n          }}\r\n          onClick={() => changeMainColor()}\r\n        ></div>\r\n        <input type=\"text\" value={inputColor} onChange={changeInputColor} />\r\n      </div>\r\n\r\n      <div className=\"color__component-sliders\">\r\n        <div className=\"component-slider\">\r\n          <span className=\"component-slider__text\">R:</span>\r\n          <input\r\n            className=\"component-slider__input\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"255\"\r\n            value={colorComponents.red}\r\n            name=\"red\"\r\n            onChange={changeComponent}\r\n          />\r\n          <span className=\"component-slider__text\">\r\n            {colorComponents.red.toString().padStart(3, \"0\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"component-slider\">\r\n          <span className=\"component-slider__text\">G:</span>\r\n          <input\r\n            className=\"component-slider__input\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"255\"\r\n            value={colorComponents.green}\r\n            name=\"green\"\r\n            onChange={changeComponent}\r\n          />\r\n          <span className=\"component-slider__text\">\r\n            {colorComponents.green.toString().padStart(3, \"0\")}\r\n          </span>\r\n        </div>\r\n        <div className=\"component-slider\">\r\n          <span className=\"component-slider__text\">B:</span>\r\n          <input\r\n            className=\"component-slider__input\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"255\"\r\n            value={colorComponents.blue}\r\n            name=\"blue\"\r\n            onChange={changeComponent}\r\n          />\r\n          <span className=\"component-slider__text\">\r\n            {colorComponents.blue.toString().padStart(3, \"0\")}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PalleteGenColor;\r\n","import { palleteGenContext } from \"context/PalleteGenContext\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport \"./PalleteGenColorBar.scss\";\r\nimport PalleteGenColor from \"components/PalleteGen/PalleteGenColor/PalleteGenColor\";\r\n\r\nimport { ColorCoord } from \"../../../context/PalleteGenContext\";\r\nimport {\r\n  ColorBarContext,\r\n  ColorBarContextSchema,\r\n} from \"context/ColorBarContext\";\r\nimport PalletePoints from \"classes/PalletePoints\";\r\n\r\nfunction PalleteGenColorBar() {\r\n  const { pallete } = useContext(palleteGenContext);\r\n  const { colorBarData, setColorBarData } = useContext(ColorBarContext);\r\n\r\n  useEffect(() => {\r\n    if (pallete.canvasOBJ) {\r\n      setColorBarData((): ColorBarContextSchema => {\r\n        return {\r\n          mainColor: pallete.mainColor,\r\n          secondaryColors: pallete.secondaryColors,\r\n          modifiedBy: \"canvas\",\r\n          palleteType: pallete.type,\r\n        };\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [pallete.mainColor, pallete.secondaryColors]);\r\n  useEffect(() => {\r\n    if (pallete.canvasOBJ) {\r\n      const finder = new PalletePoints(\r\n        pallete.canvasOBJ,\r\n        [150, 0],\r\n        \"analog\",\r\n        pallete.saturationGrad\r\n      );\r\n\r\n      pallete.canvasOBJ.drawMainPoint([150, 0]);\r\n      pallete.canvasOBJ.drawSecondaryPoints(finder.points);\r\n\r\n      setColorBarData((prev: ColorBarContextSchema): ColorBarContextSchema => {\r\n        return {\r\n          ...prev,\r\n          secondaryColors: finder.secondaryColors,\r\n        };\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [pallete.canvasOBJ]);\r\n  /* eslint-enable */\r\n  useEffect(() => {\r\n    if (colorBarData.modifiedBy === \"color\" && pallete.canvasOBJ) {\r\n      const { coord } = colorBarData.mainColor;\r\n\r\n      const finder = new PalletePoints(\r\n        pallete.canvasOBJ,\r\n        coord,\r\n        pallete.type,\r\n        pallete.saturationGrad\r\n      );\r\n\r\n      setColorBarData((prev: ColorBarContextSchema): ColorBarContextSchema => {\r\n        return {\r\n          mainColor: colorBarData.mainColor,\r\n          secondaryColors: finder.secondaryColors,\r\n          modifiedBy: \"recalc\",\r\n          palleteType: pallete.type,\r\n        };\r\n      });\r\n    }\r\n    /* eslint-disable */\r\n  }, [colorBarData.mainColor, pallete.canvasOBJ, pallete.type]);\r\n  /* eslint-enable */\r\n\r\n  useEffect(() => {\r\n    if (colorBarData.modifiedBy === \"recalc\" && pallete.canvasOBJ) {\r\n      const { coord } = colorBarData.mainColor;\r\n      const points = colorBarData.secondaryColors.map((item) => item.coord);\r\n\r\n      pallete.canvasOBJ.drawManager(coord, points);\r\n    }\r\n    /* eslint-disable */\r\n  }, [colorBarData]);\r\n  /* eslint-enable */\r\n  return (\r\n    <div className=\"color-bar\">\r\n      <PalleteGenColor\r\n        initialColor={colorBarData.mainColor}\r\n        isMainColor={true}\r\n      />\r\n\r\n      {colorBarData.secondaryColors &&\r\n        colorBarData.secondaryColors.length &&\r\n        colorBarData.secondaryColors.map((item: ColorCoord, index: number) => (\r\n          <PalleteGenColor\r\n            key={item.id}\r\n            initialColor={item}\r\n            isMainColor={false}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PalleteGenColorBar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./PalleteGen.scss\";\r\nimport PalleteGenPicker from \"components/PalleteGen/PalleteGenPicker/PalleteGenPicker\";\r\nimport PalleteGenStyle from \"components/PalleteGen/PalleteGenStyle/PalleteGenStyle\";\r\nimport PalleteGenColorBar from \"components/PalleteGen/PalleteGenColorBar/PalleteGenColorBar\";\r\nimport { PalleteGenContextProvider } from \"context/PalleteGenContext\";\r\nimport {\r\n  ColorBarContext,\r\n  ColorBarContextSchema,\r\n} from \"context/ColorBarContext\";\r\nimport { PageTextContext } from \"context/PageTextContext\";\r\nimport TextContent from \"../../components/Frame/TextContent/TextContent\";\r\nimport useLocalStorage from \"hooks/useLocalStorage\";\r\n\r\nfunction PalleteGen() {\r\n  const { data } = useContext(PageTextContext);\r\n  const { colorBarData, setColorBarData } = useContext(ColorBarContext);\r\n  const [storedColorBar, setStoredColorBar] =\r\n    useLocalStorage<ColorBarContextSchema>(\"pallete-color-bar\", colorBarData);\r\n\r\n  useEffect(() => {\r\n    if (storedColorBar !== colorBarData) {\r\n      setColorBarData({\r\n        ...storedColorBar,\r\n        modifiedBy: \"storage\",\r\n      });\r\n    }\r\n  }, [storedColorBar]);\r\n\r\n  useEffect(() => {\r\n    if (colorBarData.modifiedBy !== \"storage\") {\r\n      setStoredColorBar(colorBarData);\r\n    }\r\n  }, [colorBarData]);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"pallete-gen\">\r\n        <h2>{data.palletePage.title}</h2>\r\n        <div className=\"pallete-gen__container\">\r\n          <PalleteGenContextProvider>\r\n            <div className=\"pallete-gen__color-picker\">\r\n              <PalleteGenPicker />\r\n            </div>\r\n            <div className=\"pallete-gen__pallete-style\">\r\n              <PalleteGenStyle />\r\n            </div>\r\n            <div className=\"pallete-gen__color-bar\">\r\n              <PalleteGenColorBar />\r\n            </div>\r\n          </PalleteGenContextProvider>\r\n        </div>\r\n      </section>\r\n      <TextContent data={data.palletePage.textContent} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PalleteGen;\r\n"],"names":["Color","_classCallCheck","_createClass","key","value","num","min","max","Math","RGBColor","_Color","_inherits","_super","_createSuper","red","green","blue","_this","alpha","arguments","length","undefined","call","clamp","this","concat","get","HEXColor","_RGBColor","_super2","hex","_i","_arr","parsed","toString","padStart","parseInt","HSLColor","_Color2","_super3","hue","saturation","lightness","_this2","CMYKColor","_Color3","_super4","cyan","magenta","yellow","black","_this3","ColorParser","color","invalidColorMessage","validateHEX","splitHEX","validateCMYK","splitCMYK","validateRGB","splitRGB","validateHSL","splitHSL","includes","test","p","q","t","hueToRGB","round","h","s","l","d","isNaN","_this$color","RGBtoHSL","_this$color2","_this$CMYKtoRGB","CMYKtoRGB","_this$color3","_this$color4","HSLtoRGB","_this$color5","_this$color6","_this$color7","_this$HSLtoRGB","_this$color8","_this$CMYKtoRGB2","_this$color9","RGBtoCMYK","_this$color10","_this$HSLtoRGB2","_match$1$split$map","match","split","map","item","parseFloat","_match$1$split$map2","_slicedToArray","slice","colorComponents","_step","extended","_iterator","_createForOfIteratorHelper","n","done","repeat","err","e","f","i","component","push","_match$1$split$map3","_match$1$split$map4","_match$1$split$map5","_match$1$split$map6","_ref","_jsxs","className","children","_jsx","style","background","startsWith","rgb","data","contentRef","useRef","title","main","prevs","useEffect","current","innerHTML","ReactMarkdown","ContentExample","contentTitle","items","ContentBlock","defaultData","width","window","screen","availWidth","height","availHeight","xsm","sm","md","lg","xlg","ScreenDimensionContext","createContext","setData","_useState","useState","_useState2","addEventListener","_objectSpread","Provider","useColorValidator","validatePercent","percentExp","_len","values","Array","_key","_values","j","replace","toFixed","text","regAlpha","x","parse","JSON","_unused","validateHue","shift","apply","_toConsumableArray","_unused2","_unused3","defaultValue","localStorage","getItem","setItem","stringify","state","setState","mainColor","coord","id","uuidV4","secondaryColors","type","saturationGrad","palleteGenContext","pallete","setPallete","PalleteGenContextProvider","PalletePoints","canvasOBJ","mainPoint","palleteType","drawOnlyWheel","canvas","center","colors","points","point","findPointColor","context","parser","getContext","cartesianDistance","atan2","secondaryPoints","sin","angle","degToRad","cos","distance","y","multipliers","invert","sin1","cos1","sin2","cos2","sin3","cos3","sin4","_angleArr","_angleArr$_i","multiplier","x1","y1","x2","y2","x3","y3","cos4","x4","y4","analog","monocramatic","triple","square","composed","complementar","slashComplementar","doubleSlashComplementar","newValue","_newValue","canvasWidth","canvasHeight","p1","p2","sqrt","pow","deg","PI","ctx","getImageData","secondValue","dist","DrawCanvas","drawWidth","setMainColor","setSecondaryColors","circleRadius","drawColorWheel","addEvents","clearRect","_this$context","satGradient","createRadialGradient","addColorStop","_this$context2","lumGradient","fillColor","offset","_this$context3","clearCanvas","colorGradient","createConicGradient","fillStyle","beginPath","fillRect","closePath","saturationGradient","lightnessGradient","_this$context4","_point","tan","strokeStyle","lineWidth","moveTo","lineTo","stroke","arc","_this$context5","_this$context6","drawMainPoint","drawSecondaryPoints","offsetX","offsetY","manager","drawCallback","drawBasedOnEvent","removeCallback","removeEventListener","canvasRef","drawObj","setDrawObj","_useState3","_useState4","_useState5","_useState6","_useContext","useContext","prev","toggler","onClick","copied","setCopied","navigator","clipboard","writeText","then","setTimeout","BsClipboardPlus","BsClipboardCheck","colorBarData","ColorBarContext","backgroundColor","CopyBtn","markdown","index","join","SyntaxHighlighter","language","dark","PreTag","useDrawCanvas","screenWidth","PageTextContext","cssCodeToggler","setCssCodeToggler","colorListToggler","setColorListToggler","ref","canvasNotSupported","palletePage","colorListTitle","CloseBtn","PalleteColorList","cssCopyTitle","PalleteCSSCode","pickerButtons","_useContext2","setColorBarData","changePalleteType","input","target","HTMLInputElement","label","parentElement","form","querySelectorAll","forEach","classList","remove","add","classManager","finder","drawManager","name","onChange","checked","initialColor","isMainColor","setColorComponents","setColor","inputColor","setInputColor","changeComponent","obj","Object","assign","_obj","_ColorParser$splitHEX2","modifiedBy","_ColorParser$hsl2","hsl","_ColorParser$hsl","changeMainColor","_ColorParser$splitHEX","PalleteGenColor","_useLocalStorage","useLocalStorage","_useLocalStorage2","storedColorBar","setStoredColorBar","_Fragment","PalleteGenPicker","PalleteGenStyle","PalleteGenColorBar","TextContent","textContent"],"sourceRoot":""}